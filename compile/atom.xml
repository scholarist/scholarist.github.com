<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>"Hello Sorld!", a weblog by Andrew Benton</title>
  <link href="http://hellosorld.com/atom.xml" rel="self"/>
  <link href="http://hellosorld.com/"/>
  <updated>2011-10-04T15:07:01-04:00</updated>
  <id>http://hellosorld.com/</id>
  <author>
    <name>Andrew Benton</name>
  </author>
  
    <entry>
      <title>Journals</title>
      <link href="http://hellosorld.com/2011/09/30/Journals.html"/>
      <updated>2011-09-30T00:00:00-04:00</updated>
      <id>http://hellosorld.com/2011/09/30/Journals</id>
      <content type="html">&lt;p&gt;September 30 2011&lt;/p&gt;

&lt;p&gt;It seems that the heart of American literature, or at least all that&amp;#8217;s good in American literature, is in Thoreau&amp;#8217;s &lt;em&gt;Journals&lt;/em&gt;. Thoreau wrote these to a high standard, and the sentences and paragraphs in his journal as as good as anything in &lt;em&gt;Walden&lt;/em&gt;. There is no doubt about the quality of the &lt;em&gt;Journals&lt;/em&gt; or of the labor that went into them.&lt;/p&gt;

&lt;p&gt;What the &lt;em&gt;Journals&lt;/em&gt; give up is Thoreau&amp;#8217;s ongoing self-invention. Through the daily entries, Thoreau documents his development as a writer and a thinker. Since he had few models, and had testy relations with those, at best, he made up much of it as he went along. It was a hard road, and it took him years to shake off the nonsense he learned at Harvard (at least until 1850 or thereabouts).&lt;/p&gt;

&lt;p&gt;There&amp;#8217;s nothing more American than this, or at least nothing more positively American. Canby says that in the 1830s a man could do anything he wanted except make a living as a artist or writer. Thoreau figured out a way to do just that, and documented the steps he took, one day at a time, for 25 years.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;Journals&lt;/em&gt; are a detailed exploration of a mind, and in this sense have the same aspirations as Montaigne&amp;#8217;s &lt;em&gt;Essais&lt;/em&gt;. They aren&amp;#8217;t constructed as the &lt;em&gt;Essais&lt;/em&gt; are, though, in that Thoreau doesn&amp;#8217;t build them up into bigger pieces, revising and fitting them together (except when he draws extracts for a piece meant for publication, like &lt;em&gt;Walden&lt;/em&gt; or &lt;em&gt;Walking&lt;/em&gt;). Instead, the &lt;em&gt;Journals&lt;/em&gt; are writing-in-process, daily writing, much like Pepys&amp;#8217; famous diary, though without the nitty-gritty of daily life. Like Pepys, Thoreau couldn&amp;#8217;t help but write everyday.&lt;/p&gt;

&lt;p&gt;If I had to say what Thoreau&amp;#8217;s great accomplishment was, it would be creating a new form combining the &lt;em&gt;Essais&lt;/em&gt; and the &lt;em&gt;Diary&lt;/em&gt;. And what a form it is.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Writing</title>
      <link href="http://hellosorld.com/2011/09/29/diary.html"/>
      <updated>2011-09-29T00:00:00-04:00</updated>
      <id>http://hellosorld.com/2011/09/29/diary</id>
      <content type="html">&lt;p&gt;Why write? Why keep a commonplace or a journal? Because you want to construct a self who writes.&lt;/p&gt;

&lt;p&gt;Donald Frame on Montaigne:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Self-sufficient though he was, he had an imperious need to communicate. The &lt;em&gt;Essais&lt;/em&gt; are his means of communication; the reader takes the place of the dead friend.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Keeping a journal or a commonplace is just another way of communicating. The process allows you entry into the world where writers write, where words and ideas are moved around on a page and where you can build up a substantial body of work simply by applying yourself repeatedly. There is a low barrier to entry, unless you wish to publish, but publication is something completely different from writing, isn&amp;#8217;t it?&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Curation</title>
      <link href="http://hellosorld.com/2011/09/27/curation.html"/>
      <updated>2011-09-27T00:00:00-04:00</updated>
      <id>http://hellosorld.com/2011/09/27/curation</id>
      <content type="html">&lt;p&gt;Sarah Epps wrote about the iPad and &quot;curated computing&quot;&amp;nbsp; in &lt;a href='http://is.gd/kfMSl'&gt;Ars Technica&lt;/a&gt; last year:&lt;/p&gt;&lt;p&gt;There is something very significant about the iPad beyond how many&lt;br /&gt; units it will sell: it's changing how we think about the PC. The
iPad&lt;br /&gt; creates a use case for a device that doesn't do everything
your laptop&lt;br /&gt; does, targeted at a consumer that uses devices more
for consumption&lt;br /&gt; than production. The iPad ushers in a new era of
personal computing&lt;br /&gt; that we call &quot;Curated Computing&quot;&amp;mdash;a mode
of computing where choice is&lt;br /&gt; constrained to deliver less complex,
more relevant experiences. Let me&lt;br /&gt; repeat that, because it's the
essence of the Curated Computing&lt;br /&gt; experience: less choice; more
relevance.&lt;/p&gt;&lt;p&gt;In a curated environment, freedom and openness are exchanged for
convenience and relevance.&lt;/p&gt;&lt;p&gt;&lt;a href='http://is.gd/kfNO4'&gt;Wired&lt;/a&gt;, on musical curation replacing
music criticism:&lt;/p&gt;&lt;p&gt;The fact that your favorite MP3 blog mentions something at all is
more&lt;br /&gt; important than what they say about it, because you can then
download&lt;br /&gt; or stream the song and decide for yourself.&lt;/p&gt;&lt;p&gt;W. T. Quick is a sf writer whom I think is mostly a hack. However. In
the&lt;a href='http://www.isfdb.org/cgi-bin/pl.cgi?ANLGMAY89'&gt; May,
1989&lt;/a&gt; issue of &lt;em&gt;Analog&lt;/em&gt; he published a short story titled
&quot;Bank Robbery&quot;, about a man who makes  his living reading the vast
amount of freely distributed essays, books,  articles available on the
&quot;net&quot;, and writing up a periodical review for  sale to interested
readers who came to trust his judgment totally. The  man curated text,
as we would call it.&lt;/p&gt;&lt;p&gt;While I didn't think the story had much literary value I was struck
with the core concept and in the last 20 years I've only seen one
confirmation after another of Quick's vision. This is probably the way
science fiction thinks it works.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Web as platform</title>
      <link href="http://hellosorld.com/2011/09/22/web.html"/>
      <updated>2011-09-22T00:00:00-04:00</updated>
      <id>http://hellosorld.com/2011/09/22/web</id>
      <content type="html">&lt;p&gt;Joe Hewitt, &amp;#8220;Web Technologies Need an Owner&amp;#8221; &lt;em&gt;&lt;a href='http://is.gd/vzXtdb'&gt;Link&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When you read randomly and widely, you find articles that clarify your thinking. I&amp;#8217;d heard about the &amp;#8220;web as a platform&amp;#8221;, but I was never sure what it meant. Hewitt simplifies it, perhaps too much, to html, css, and Javascript. Any web application is going to use those three tools. The web is open, free, and leaderless because these three tools are widely available.&lt;/p&gt;

&lt;p&gt;Fundamentally, Hewitt thinks this is a flaw. The ownerless web can&amp;#8217;t innovate quickly enough to keep up with proprietary internet applications designed for mobile phones and tablets. Eventually FaceBorg and all the rest will be accessed from proprietary apps, and the web version of the services, if they exist at all, will be vestigial. The web will go back to being a large repository of hyperlinked documents, sort of Gopher with pictures.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Baker Farm</title>
      <link href="http://hellosorld.com/2011/08/30/notes.html"/>
      <updated>2011-08-30T00:00:00-04:00</updated>
      <id>http://hellosorld.com/2011/08/30/notes</id>
      <content type="html">&lt;p&gt;HDT talks about the trees in the neighborhood, listing them by name, and ending by calling them &amp;#8220;shrines&amp;#8221;. The chapter changes tack during a rainstorm, when he finds cover in what he at first thinks is an abandoned hut. He meets the Field family, poor Irish, supported by father John&amp;#8217;s work as a bogger, who earns 10 dollars an acre for digging up meadowland.&lt;/p&gt;

&lt;p&gt;Thoreau thinks he&amp;#8217;s getting the short end of the deal as this work will cost him much more than 10 bucks a month.&lt;/p&gt;

&lt;p&gt;I think some of the costs may be real&amp;#8211;bogging is hard work and wears out heavy boots and clothing. Other costs, certainly, are the neglected opportunities Field and his family will miss by trying to pursue wealth the old -fashioned way, through hard and meaningless work that limits freedom. He notes Mrs. Field, saying she still thinks she can improve her life.&lt;/p&gt;

&lt;p&gt;I detect a condescension to the poor Irish here and I probably reacted to it when I last read &lt;em&gt;Walden&lt;/em&gt; about 10 years ago. HDT was blaming the poor for their problems. Of course I had no problem when HDT blames the bourgeoisie for &lt;em&gt;their&lt;/em&gt; problems, because somehow I see the poor as different, with fewer resources to help themselves. This is equally condescending, of course, treating the poor as helpless.&lt;/p&gt;

&lt;p&gt;Regardless of the cause of the poverty, the proper interpretation seems to be that anyone has agency, that anyone can do things to improve their life and escape poverty. Not by making more money, of course, but by living simply. When you redefine poverty as the lack of things that are really important in life, you can escape it this way.&lt;/p&gt;

&lt;p&gt;Of course, this kind of secular renunciation is quietist. That&amp;#8217;s another argument.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Thoreau&amp;#8217;s quietism is problematic. While he talks about a renunciation of worldly economic activity to all for more important pursuits, he leaves open what those pursuits should be. Having more time for your thoughts may mean having more time for writing and publishing anti-slavery lectures. Like John Brown, HDT was an ascetic in pursuit of something and not having to worry about spending all your time tending your farm freed him up to write things like &amp;#8220;A Plea for Captain John Brown&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Notice from August 30 1856:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you would really take a position outside the street and daily life of men, you must have deliberately planned your course, you must have business which is not your neighbors&amp;#8217; business, which they cannot understand. For only absorbing employment prevails, succeed, takes up space, occupies territory, determines the future of individuals and states, drives Kansas out of your head and actually and permanently occupies the only desirable and free Kansas against all border ruffians.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I ran into this notice directly after wondering about HDT&amp;#8217;s &amp;#8220;quietism&amp;#8221;. John Field and his family, once they figured out how to live free, could plan a deliberately course of business outside of the ken of their neighbors. It would probably not be abolition, if I understand the 19th century Irish immigrant, but something else as important.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;HDT&amp;#8217;s August 30 notice continues with the cranberry harvest. He gathers cranberries from a bog. Sometime before he told the owner about the berries and the farmer, not seeing a profit to be made, gave it up to HDT and his annual expeditions. An excerpt:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I am the only person in the township who regards them or knows of them, and I do not regard them in the light of their pecuniary value. I have no doubt I felt richer wading there with my two pockets full, treading on wonders at every step, than any farmer going to marked with a hundred bushels which he has raked or hired to be raked. I got further and further from the town every moment, and my good genius seemed to have smiled on me leading me hither, and then the suddenly came out clear and bright, but it did not warm my feet.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here he&amp;#8217;s found his &amp;#8220;absorbing employment&amp;#8221;, far from the street and daily life of men.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>second post</title>
      <link href="http://hellosorld.com/2011/08/17/second-post.html"/>
      <updated>2011-08-17T00:00:00-04:00</updated>
      <id>http://hellosorld.com/2011/08/17/second-post</id>
      <content type="html">&lt;p&gt;This is my second post, what I&amp;#8217;m using with the new &lt;em&gt;jekyll&lt;/em&gt; toy.&lt;/p&gt;

&lt;p&gt;This is the &lt;strong&gt;second&lt;/strong&gt; paragraph.&lt;/p&gt;

&lt;p&gt;See me online at &lt;a href='http://scholarist.livejournal.com'&gt;scholarist&lt;/a&gt;&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>second post</title>
      <link href="http://hellosorld.com/2011/06/11/first-post.html"/>
      <updated>2011-06-11T00:00:00-04:00</updated>
      <id>http://hellosorld.com/2011/06/11/first-post</id>
      <content type="html">&lt;p&gt;This is my second post, what I&amp;#8217;m using with the new &lt;em&gt;jekyll&lt;/em&gt; toy.&lt;/p&gt;

&lt;p&gt;This is the &lt;strong&gt;second&lt;/strong&gt; paragraph.&lt;/p&gt;

&lt;p&gt;See me online at &lt;a href='http://scholarist.livejournal.com'&gt;scholarist&lt;/a&gt;&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Going Down Fighting</title>
      <link href="http://hellosorld.com/android/apple/carriers/2010/09/15/going-down-fighting.html"/>
      <updated>2010-09-15T00:00:00-04:00</updated>
      <id>http://hellosorld.com/android/apple/carriers/2010/09/15/going-down-fighting</id>
      <content type="html">&lt;p&gt;Verizon and AT&amp;amp;T are scared. It&amp;#8217;s probably obvious but I haven&amp;#8217;t seen or heard it discussed much: &lt;strong&gt;people just aren&amp;#8217;t making many phone calls anymore&lt;/strong&gt;. The decline probably started as email gained in popularity. And with more and more people maintaining social relationships through Facebook&amp;#8217;s wall and messages and chat, the decline has surely quickened.&lt;/p&gt;

&lt;p&gt;I read this post last night titled &lt;a href='http://eliainsider.com/2010/09/14/fighting-the-wrong-fight/'&gt;&amp;#8220;Fighting The Wrong Fight.&amp;#8221;&lt;/a&gt; It makes the astute point that iPhone vs Android is not the battle we as consumers should be spending our time thinking about and spilling ink over. We should really be concerned with the battle between ourselves and mobile &amp;#8220;telephone&amp;#8221; service providers like AT&amp;amp;T and Verizon.&lt;/p&gt;

&lt;p&gt;I deliberately use quotes around &amp;#8220;telephone&amp;#8221; here, since &lt;strong&gt;all communication to and from our phones is just data&lt;/strong&gt;. We should really call the wireless carriers &amp;#8220;mobile data service providers.&amp;#8221; But this subtle difference is precisely what mobile data service providers are scared we will discover. So I doubt they are eager for us to start referring to them with a properly descriptive phrase.&lt;/p&gt;

&lt;p&gt;They are scared because they sell voice and SMS data at extremely high margins, and they would like to continue doing that. If people were to notice that wireless carriers are &lt;strong&gt;charging an effective rate of &lt;a href='http://gthing.net/the-true-price-of-sms-messages'&gt;$375/MB&lt;/a&gt; for SMS&lt;/strong&gt; (assuming each message costs five cents) they might get upset. Compare that to &lt;a href='http://arstechnica.com/telecom/news/2010/06/new-att-data-plans-milk-data-gluttons-lower-costs-for-most.ars'&gt;AT&amp;amp;T&amp;#8217;s recent data plan price shift&lt;/a&gt; which charges $15 for 200MB for an effective rate of $0.075/MB and you understand why. So we see wireless carrier plans broken down into voice, SMS and data segments, to make it seem as though there is a difference.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But the shift from wireless &amp;#8220;telephone&amp;#8221; service provider to wireless data service provider is inevitable&lt;/strong&gt;, and the carriers know it. It also appears to be inevitable that the wireless carriers will milk us for all they can on the way down (T-Mobile excluded; more in an upcoming post). All carriers besides T-Mobile are charging an extra fee to enable the free wifi hotspot feature included by default in the Android OS, which allows a computer to connect to the internet through the phone&amp;#8217;s internet connection. Sprint&amp;#8217;s data plans for the Android EVO cost $10 more than for their other smartphones. But why? It&amp;#8217;s all the same data!?!&lt;/p&gt;

&lt;p&gt;Wireless carriers are also trying to set reference prices for data service in anticipation of the total decline in SMS and voice usage. Just refer to recent changes in &lt;a href='http://digitaldaily.allthingsd.com/20100115/new-verizon-wireless-plans-available-monday/'&gt;Verizon&amp;#8217;s service plan prices&lt;/a&gt; where they cut voice plan prices while simultaneously raising data plan prices.&lt;/p&gt;

&lt;p&gt;Now despite their obvious differences, I believe Google and Apple are both on our side in trying to relegate wireless data service to a commodity. But we&amp;#8217;ve got to do most of the fighting ourselves. We need to stop putting up with carriers bullying us around. Stop buying carrier-locked phones. &lt;strong&gt;Stop signing long-term contracts in exchange for subsidized phones&lt;/strong&gt;. Those are just carrier delay tactics. The sooner we push wireless carriers down where they belong, the better off we&amp;#8217;ll all be.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Own Your Identity</title>
      <link href="http://hellosorld.com/tech/2010/09/10/own-your-identity.html"/>
      <updated>2010-09-10T00:00:00-04:00</updated>
      <id>http://hellosorld.com/tech/2010/09/10/own-your-identity</id>
      <content type="html">&lt;p&gt;Identity is a word that seems to have many meanings. It&amp;#8217;s your substance, your DNA, how people know you, your name, your email address, your job, the collection of all your thoughts and opinions. If asked &amp;#8220;What is your identity?&amp;#8221; or &amp;#8220;Who are you?&amp;#8221; I think almost everyone would begin to answer with &amp;#8220;I am&amp;#8230;.&amp;#8221; So identity is inherently personal. It will mean something slightly different to each individual.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Identity is not constant.&lt;/strong&gt; It shifts, both over long periods of time and within a single day. Your identity at work is a variation of your identity at home with your parents, which is a variation of your identity when you&amp;#8217;re alone with your boyfriend or girlfriend. Some parts of your identity will remain constant through a number of these variations, while others may exist in only one.&lt;/p&gt;

&lt;p&gt;Identity is only meaningful because we are constantly coming into contact with other people, and we need to differentiate ourselves from them. &lt;strong&gt;If you were the only person on the earth, your identity wouldn&amp;#8217;t matter at all.&lt;/strong&gt; You would have no need to identify yourself or to distinguish yourself from others. So your identity at its very core only exists to assist us in social contact.&lt;/p&gt;

&lt;p&gt;So it&amp;#8217;s no wonder that so many of the things we associate with our identities are directly related to social communication: our names, our addresses, our phone numbers, our email addresses. These are the keys that allow others to unlock the wealth of information inside each of us. Therefore it is critically important that we ourselves maintain as much control over our identities as possible.&lt;/p&gt;

&lt;p&gt;What happens when a government or corporation controls part of your identity? &lt;strong&gt;It can hold you hostage.&lt;/strong&gt; This costs you money and prevents you from making choices that would improve your life. There are many examples of this hostage-holding in our everyday lives. Most times we don&amp;#8217;t even realize it. We often don&amp;#8217;t demand release from bondage, because we don&amp;#8217;t know that we are being held.&lt;/p&gt;

&lt;p&gt;So lets consider a few examples of pieces of your identity that you own and one piece you don&amp;#8217;t.&lt;/p&gt;

&lt;p&gt;First, &lt;strong&gt;your name&lt;/strong&gt;. Before you could read and write, the only way to communicate with you was through speech. If your mother wanted to get your attention to tell you something, she would call you by name. Now it may not seem like it because your parents gave it to you, but you control your name. You can choose what names you respond to, and thereby can change your name at any time. You own that piece of your identity. Yes, the government requires you to have a name to put on government-issued documents, but you can change that as well.&lt;/p&gt;

&lt;p&gt;Now consider &lt;strong&gt;your email address&lt;/strong&gt;. It&amp;#8217;s a part of your identity as much as any other since it allows others to contact you directly. You can choose and control your email address just as you can your name. And I don&amp;#8217;t mean simply choosing between Yahoo! Mail and GMail. At very little cost to yourself you can buy your own domain name, like andrewmbenton.com, run an email server behind it and start accepting email at any address you want, like me@andrewmbenton.com. You own it.&lt;/p&gt;

&lt;p&gt;On the other hand, think about &lt;strong&gt;your phone number&lt;/strong&gt;. You probably got it from a telecom carrier. Until recently (in the US) you had to change your number if you moved to a new phone company. And since most phones (again in the US) are tied to a particular carrier, you often had to change your number if you wanted a better phone. Changing phone numbers is a major hassle, and the phone companies took advantage of that. The phone company owned your number, and held you hostage.&lt;/p&gt;

&lt;p&gt;Porting of phone numbers is now possible, although many people aren&amp;#8217;t aware of it and I don&amp;#8217;t think the carriers are particularly excited about educating us. With porting, your phone number is now a part of your identity that you own.&lt;/p&gt;

&lt;p&gt;Finally consider &lt;strong&gt;your Facebook account&lt;/strong&gt;. This likely has become a major part of your identity sometime in the past five years. Other people can communicate with you using Facebook messages, and they can find out a lot about you just from browsing your profile and status updates. But you don&amp;#8217;t own your Facebook account. Sure you have (&lt;a href='http://www.bingocardcreator.com/articles/facebook-like-button-spam'&gt;almost total&lt;/a&gt;) control over what shows up in your profile. But who really owns the data? If Facebook decided tomorrow that you violated their terms of service and closed your account, could you do anything about it? Could you get any of your photos, or messages, or wall posts out? Can you even get those out now to back them up? The answer is no. You don&amp;#8217;t own this (perhaps significant) piece of your identity.&lt;/p&gt;

&lt;p&gt;So far Facebook hasn&amp;#8217;t held us hostage in obvious ways. Ads are obvious, though not terribly onerous in exchange for the value Facebook provides. But Facebook has made ever more of our once private information public for it&amp;#8217;s own gain. And we are generally helpless to prevent it, since we have come to rely on Facebook to provide so much of our identities.&lt;/p&gt;

&lt;p&gt;Facebook may not go much farther than it has already, but then again it might. The point is that in relying on a single company to provide such a significant piece of our identities &lt;strong&gt;we leave ourselves vulnerable to that company&amp;#8217;s interests and needs&lt;/strong&gt;, which may not align perfectly with our own.&lt;/p&gt;

&lt;p&gt;I closed my Facebook account because I want to own my identity. Take a close look at how much of your identity Facebook provides, and make sure you&amp;#8217;re comfortable with a single company owning that much of it.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Apple Doesn't Care Whether Your iPhone App Makes Money</title>
      <link href="http://hellosorld.com/tech/2010/05/14/apple-doesnt-care-whether-your-iphone-app-makes-money.html"/>
      <updated>2010-05-14T00:00:00-04:00</updated>
      <id>http://hellosorld.com/tech/2010/05/14/apple-doesnt-care-whether-your-iphone-app-makes-money</id>
      <content type="html">&lt;p&gt;About a month ago I wrote an article about &lt;a href='/tech/2010/04/16/apple-doesnt-want-your-iphone-app-to-make-money.html'&gt;Apple and iPhone apps&lt;/a&gt;, claiming that since the iPhone and iPhone apps are complementary products, Apple has an incentive to keep apps cheap in order to sell more phones. A lot of people thought I was wrong both here and on &lt;a href='http://news.ycombinator.com/item?id=1277186'&gt;Hacker News&lt;/a&gt;. So in an effort to redeem what was perhaps a poorly-written thesis, I present this update based on the discussions that followed.&lt;/p&gt;

&lt;p&gt;I maintain that Apple is primarily a hardware company making &lt;a href='http://www.businessweek.com/technology/content/jul2007/tc2007072_957316.htm'&gt;high margins&lt;/a&gt; on each device it sells. Apple is happy to keep doing this, since it&amp;#8217;s very very good at it. But being the intelligent marketers that they are, Apple&amp;#8217;s execs know that people like to buy devices that can do loads of cool stuff. Enter iPhone apps and the App Store.&lt;/p&gt;

&lt;p&gt;Since Apple isn&amp;#8217;t really a software company it must entice others to create applications for its devices. So far it has wildly succeeded in achieving this with the iPhone (and iPod Touch), boasting over &lt;a href='http://mediamemo.allthingsd.com/20100429/apple-were-at-200000-ipad-apps-and-counting-and-none-of-them-use-flash/'&gt;200,000 apps&lt;/a&gt; available in the App Store. But quantity of apps isn&amp;#8217;t the only metric that matters. Price is also important. If all of those 200,000 apps cost $99, the App Store would be almost useless as a marketing tool since few could afford to buy many apps.&lt;/p&gt;

&lt;p&gt;So Apple clearly has an incentive to create a commoditized app marketplace, where good apps are plentiful &lt;em&gt;and&lt;/em&gt; cheap. But this is exactly the situation that &lt;a href='http://www.joelonsoftware.com/articles/StrategyLetterV.html'&gt;&amp;#8220;Strategy Letter V&amp;#8221;&lt;/a&gt; predicts for a product and its complements. And based on information like &lt;a href='http://blog.jwegener.com/2009/02/19/iphone-app-economics-free-vs-paid/'&gt;this&lt;/a&gt;, it&amp;#8217;s hard to deny that the App Store isn&amp;#8217;t already a commoditized marketplace. Most apps are free or cost 99 cents regardless of quality or development cost.&lt;/p&gt;

&lt;p&gt;Hence we see, at best, that Apple really doesn&amp;#8217;t care whether or not your iPhone app makes any money. As long as it is good and inexpensive, Apple is happy to sell it for you since they reap most of the rewards. (Granted Apple takes 30% from each app sale, but they&amp;#8217;ve stated that the fees cover the overhead of running the App Store and are not a significant source of profits). But as an app developer, your incentives and Apple&amp;#8217;s are not at all aligned.&lt;/p&gt;

&lt;p&gt;Now don&amp;#8217;t get me wrong, Apple has every right to pursue what&amp;#8217;s best for itself according to its incentives. But let&amp;#8217;s not hold any illusions that Apple has developers&amp;#8217; best interests at heart.&lt;/p&gt;

&lt;p&gt;P.S.&lt;/p&gt;

&lt;p&gt;Interestingly &amp;#8220;Strategy Letter V&amp;#8221; also sheds light on the developer outrage surrounding Apple&amp;#8217;s &lt;a href='http://daringfireball.net/2010/04/iphone_agreement_bans_flash_compiler'&gt;change to Article 3.3.1&lt;/a&gt; in the iPhone Developer Program License Agreement. Just as Apple has an incentive to commoditize iPhone OS software, software developers have an incentive to commoditize devices. How would they do that? By creating a software abstraction layer that makes every device look the same to the applications above. And these kinds of abstraction layers are exactly what the 3.3.1 change is designed to snuff out. It&amp;#8217;s an interesting battle with plenty of money to be made and lost on both sides.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Presenting ifmap.js and jsmap</title>
      <link href="http://hellosorld.com/open-source/2010/05/12/presenting-ifmap-js-and-jsmap.html"/>
      <updated>2010-05-12T00:00:00-04:00</updated>
      <id>http://hellosorld.com/open-source/2010/05/12/presenting-ifmap-js-and-jsmap</id>
      <content type="html">&lt;p&gt;I&amp;#8217;ve spent the past six months as a contractor with &lt;a href='http://www.infoblox.com/'&gt;Infoblox&lt;/a&gt; in Santa Clara California working on projects related to &lt;a href='http://ifmapdev.com/documentation'&gt;IF-MAP&lt;/a&gt;, a client/server protocol for network-connected devices. I should have written a post describing the protocol long ago, but I wanted it to be entertaining and have pretty pictures which ended up deterring me from ever starting. So for the purposes of this post it&amp;#8217;s enough to say that a MAP server is pretty much just a graph database with publish, search and subscribe operations, and a MAP client uses the IF-MAP protocol to perform those operations. The IF-MAP protocol itself is really just a specific &lt;a href='http://en.wikipedia.org/wiki/SOAP'&gt;SOAP&lt;/a&gt; format built on top of HTTPS as a transport layer.&lt;/p&gt;

&lt;p&gt;So with that little bit of background, I&amp;#8217;m announcing the open-source release of two related software projects: &lt;a href='http://github.com/andrewmbenton/ifmap.js'&gt;ifmap.js&lt;/a&gt; and &lt;a href='http://github.com/andrewmbenton/jsmap'&gt;jsmap&lt;/a&gt;. I&amp;#8217;ll describe each briefly below. See the README documents in each project&amp;#8217;s repository for more information.&lt;/p&gt;

&lt;h3 id='ifmapjs'&gt;&lt;a href='http://github.com/andrewmbenton/ifmap.js'&gt;ifmap.js&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;ifmap.js is an IF-MAP client library implementation in JavaScript. It depends on &lt;a href='http://api.jquery.com/'&gt;jQuery&lt;/a&gt;&amp;#8217;s $.post(), $.each() and $.proxy() functions. Due to browsers&amp;#8217; &lt;a href='http://en.wikipedia.org/wiki/Same_origin_policy'&gt;same-origin policy&lt;/a&gt; a JavaScript IF-MAP client can&amp;#8217;t send requests directly to a remote MAP server. All requests must be sent through a proxy, sold separately. For a simple example of how this might work, see&amp;#8230;&lt;/p&gt;

&lt;h3 id='jsmap'&gt;&lt;a href='http://github.com/andrewmbenton/jsmap'&gt;jsmap&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;jsmap uses ifmap.js to build an actual IF-MAP client that runs in the browser. You can point and click to build IF-MAP requests, submit them to a MAP server and see the responses. Requests are proxied through a simple &lt;a href='http://www.sinatrarb.com/'&gt;Sinatra&lt;/a&gt; application.&lt;/p&gt;

&lt;p&gt;Comments and suggestions are most welcome. Just send me an email; my address is pretty easy to find. For more information about IF-MAP see &lt;a href='http://ifmapdev.com/documentation'&gt;ifmapdev.com/documentation&lt;/a&gt; and join the &lt;a href='http://groups.google.com/group/ifmapdev'&gt;ifmapdev Google Group&lt;/a&gt;.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>I Quit Facebook Part II: In Which I Am Immediately Vindicated</title>
      <link href="http://hellosorld.com/personal/2010/05/06/i-quit-facebook-part-two-in-which-i-am-immediately-vindicated.html"/>
      <updated>2010-05-06T00:00:00-04:00</updated>
      <id>http://hellosorld.com/personal/2010/05/06/i-quit-facebook-part-two-in-which-i-am-immediately-vindicated</id>
      <content type="html">&lt;p&gt;So I &lt;a href='/personal/2010/05/05/i-quit-facebook-sort-of.html'&gt;quit Facebook&lt;/a&gt; a couple of days ago. Not completely, but I disabled my account. I think I&amp;#8217;m going to delete it completely after finding out today that Facebook is &lt;a href='http://www.macworld.com/article/151087/2010/05/facebook_addingapps.html'&gt;adding &amp;#8220;applications&amp;#8221;&lt;/a&gt; to our profiles just for visiting other websites. And there&amp;#8217;s no clear way to disable this behavior.&lt;/p&gt;

&lt;p&gt;Unfortunately I don&amp;#8217;t think many people will care about this, although I think most people should. Facebook will probably keep on growing. But at least one guy thinks &lt;a href='http://www.baekdal.com/opinion/facebook-is-dying-social-is-not/'&gt;Facebook is dying&lt;/a&gt;. I&amp;#8217;m not sure I see Facebook dying anytime soon, but I can see it relegated to a niche community, kind of like MySpace is still used by musicians. Who will still be on Facebook in five years? I&amp;#8217;m guessing mostly &lt;a href='http://www.insidefacebook.com/2009/02/02/fastest-growing-demographic-on-facebook-women-over-55/'&gt;older women&lt;/a&gt;.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>I Quit Facebook (Sort Of...)</title>
      <link href="http://hellosorld.com/personal/2010/05/05/i-quit-facebook-sort-of.html"/>
      <updated>2010-05-05T00:00:00-04:00</updated>
      <id>http://hellosorld.com/personal/2010/05/05/i-quit-facebook-sort-of</id>
      <content type="html">&lt;p&gt;I can&amp;#8217;t remember exactly when I joined Facebook. I think it was early 2005. We had some great moments together back then, when poking was fun and there was no such thing as a news feed or photo albums, and certainly no applications. There also wasn&amp;#8217;t much spam. It was a simpler time.&lt;/p&gt;

&lt;p&gt;But it&amp;#8217;s over now. Facebook&amp;#8217;s gone too far. And besides, I haven&amp;#8217;t logged in more than once every couple of months since early 2008. It hasn&amp;#8217;t been fun or useful for awhile. So yesterday I &amp;#8220;disabled&amp;#8221; my account. I think that means I can restore my account at any time. Meaning my data still exists in a Facebook database somewhere. But importantly, my computer won&amp;#8217;t have Facebook&amp;#8217;s cookie on it as I cruise around the internet.&lt;/p&gt;

&lt;p&gt;Why is this important? Because Facebook is &lt;a href='http://blog.facebook.com/blog.php?post=383404517130'&gt;partnering&lt;/a&gt; with a bunch of sites to help them get data about me when I visit, and the link between me and my data is that little Facebook cookie. Without the cookie, no other site will be able to know anything about me from Facebook. Facebook&amp;#8217;s partners to start are sites like Pandora, Yelp and Microsoft&amp;#8217;s Docs.com. And I have nothing in particular against any of those sites. But in the future there will be many more partner sites, perhaps a majority of sites, and it scares me to think that by just arriving at a site&amp;#8217;s landing page the owner will know a ton of stuff about me.&lt;/p&gt;

&lt;p&gt;Another reason for quitting is that I see Facebook pushing to be the single identity provider on the web, and I don&amp;#8217;t want them to win. This is even more scary. Imagine if every site on the web required you to authenticate with your Facebook username and password. In a way this would be nice, since you wouldn&amp;#8217;t have to remember the tons and tons of passwords you do now. But I don&amp;#8217;t want that forced upon me by Facebook. I want to be able to choose my identity provider, the same way I can choose my webmail provider. &lt;a href='http://openid.net/'&gt;OpenID&lt;/a&gt; and &lt;a href='http://oauth.net/'&gt;OAuth&lt;/a&gt; are open standards that support choice in identity providers. Google supports OpenID. Yahoo! supports OpenID. Blogger and Flickr support OpenID. Wordpress supports OpenID. Facebook does not. Facebook wants to restrict choice in identity management, and that&amp;#8217;s bad.&lt;/p&gt;

&lt;p&gt;So I (half) quit. I could come back, but I don&amp;#8217;t forsee it happening. And I&amp;#8217;m guessing nobody will miss me. I didn&amp;#8217;t post a status update about it, so I imagine most of my &amp;#8220;friends&amp;#8221; won&amp;#8217;t ever realize I&amp;#8217;m gone.&lt;/p&gt;

&lt;p&gt;P.S. You probably already have an OpenID that you can use to log in to a lot of sites without setting up a new account. &lt;a href='http://openid.net/get-an-openid'&gt;Find out here&lt;/a&gt;.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Apple Doesn't Want Your iPhone App to Make Money</title>
      <link href="http://hellosorld.com/tech/2010/04/16/apple-doesnt-want-your-iphone-app-to-make-money.html"/>
      <updated>2010-04-16T00:00:00-04:00</updated>
      <id>http://hellosorld.com/tech/2010/04/16/apple-doesnt-want-your-iphone-app-to-make-money</id>
      <content type="html">&lt;p&gt;There&amp;#8217;s no doubt that Apple is an incredible marketing machine. Nothing demonstrates that better than the &lt;a href='http://www.newsweek.com/id/235565/output/print'&gt;hype&lt;/a&gt; surrounding the recent iPad launch (actual Newsweek cover &lt;a href='http://ndn1.newsweek.com/media/83/100405_cover.jpg'&gt;here&lt;/a&gt;). When my dad has read more about a new product launch than I have, you know they hit it out of the park.&lt;/p&gt;

&lt;p&gt;So it&amp;#8217;s no surprise that Apple has also done an amazing job of marketing its App Store to developers as the next great software product platform. The conventional wisdom is that a lot of people are &lt;a href='http://www.wired.com/gadgetlab/2009/02/shoot-is-iphone/'&gt;making a lot of money&lt;/a&gt; selling apps in the App Store. And Apple has worked pretty hard to encourage that conventional wisdom. So strong is the impression that giant pots of gold await talented app developers that they are willing to put up with abuses like &lt;a href='http://www.rogueamoeba.com/utm/2009/11/13/airfoil-speakers-touch-1-0-1-finally-ships/'&gt;poorly-explained app rejections&lt;/a&gt;, &lt;a href='http://techcrunch.com/2010/02/18/line2-google-voice/'&gt;hypocritical &amp;#8220;policy&amp;#8221; enforcement&lt;/a&gt; and, most recently, small but &lt;a href='http://daringfireball.net/2010/04/iphone_agreement_bans_flash_compiler'&gt;significant changes&lt;/a&gt; to the iPhone Developer Program License Agreement.&lt;/p&gt;

&lt;p&gt;And why wouldn&amp;#8217;t Apple want every developer to believe he or she can get rich with an app in the App Store? Apple absolutely needs developers to continue producing apps for the iPhone, iPod Touch and now the iPad, because the strength of Apple&amp;#8217;s device sales depends critically on the strength of the App Store, and Apple makes its money selling devices. The importance of the App Store is evident in Apple&amp;#8217;s primary iPhone ad slogan, &lt;a href='http://www.youtube.com/watch?v=szrsfeyLzyg&amp;amp;feature=related'&gt;&amp;#8220;There&amp;#8217;s an App For That.&amp;#8221;&lt;/a&gt; So anybody who believes Apple&amp;#8217;s meteoric rise in mobile computing hasn&amp;#8217;t depended on the App Store is kidding herself.&lt;/p&gt;

&lt;p&gt;The trouble is that apps and iPhones (or iPods, or iPads) are complements in the economic sense. The iPhone is dependent on apps for its continued success and apps depend on the iPhone&amp;#8217;s continuing popularity for theirs. And anyone who&amp;#8217;s read Joel Spolsky&amp;#8217;s &lt;a href='http://www.joelonsoftware.com/articles/StrategyLetterV.html'&gt;&amp;#8220;Strategy Letter V&amp;#8221;&lt;/a&gt; can see where this is going. When you&amp;#8217;ve got a product in the market, you want to commoditize your product&amp;#8217;s complements. That is, you want to find ways to make complementary products as cheap and ubiquitous as possible.&lt;/p&gt;

&lt;p&gt;Apple is no exception. Rest assured they are thrilled with the more than 185,000 apps available in the App Store. But they are even more thrilled that so many are free. A continuous supply of cheap apps ensures that iPhone users can find pretty much anything they want (except &lt;a href='/tech/2009/07/28/12-19-apple-blocks-google-voice-on-iphone.html'&gt;Google Voice&lt;/a&gt;), so they continue to be happy with their device, ensuring that they will recommend it to friends, thus driving more iPhone sales.&lt;/p&gt;

&lt;p&gt;Apple wins big in this situation; developers, not so much. Because Apple&amp;#8217;s incentives aren&amp;#8217;t entirely aligned with developers&amp;#8217; incentives. Yes, both want to see iPhones and iPods in as many hands as possible. But app developers want to make money, and Apple benefits most when they don&amp;#8217;t.&lt;/p&gt;

&lt;p&gt;So if you&amp;#8217;re an App Store developer, of course Apple wants you to believe you can make a bunch of money there. And if you are one of the few, that&amp;#8217;s great. Milk it while you can. Because rest assured Apple is hoping a cheaper version of your app will appear. And you never know when it might take a more active role in encouraging such an outcome.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Free Calls with Google Voice and iPhone Developer Outrage</title>
      <link href="http://hellosorld.com/daily-dose/2010/04/12/free-calls-with-google-voice-and-iphone-developer-outrage.html"/>
      <updated>2010-04-12T00:00:00-04:00</updated>
      <id>http://hellosorld.com/daily-dose/2010/04/12/free-calls-with-google-voice-and-iphone-developer-outrage</id>
      <content type="html">&lt;p&gt;I just remembered that a couple months ago I found this awesome resource on &lt;a href='http://docs.google.com/Doc?docid=0Ae8glDUXDsh9ZGR2eG43cjRfMzNkOTM4ZjNjeA&amp;amp;hl=en'&gt;setting up Google Voice with a VoIP service&lt;/a&gt; (since Google Voice isn&amp;#8217;t actually VoIP) for unlimited free calling, so figured I might as well link to it today. Oh, and there was a bit of an &lt;a href='http://news.ycombinator.com/item?id=1250799'&gt;explosion of discontent&lt;/a&gt; over the weekend after Apple &lt;a href='http://daringfireball.net/2010/04/iphone_agreement_bans_flash_compiler'&gt;snuck in a seemingly minor change&lt;/a&gt; to its iPhone developer&amp;#8217;s license agreement. A lot of developers are finally beginning to see Apple for the ogreish beast it has become.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chrome OS build update&lt;/strong&gt;: I&amp;#8217;ve been spending some time reading posts on the &lt;a href='http://groups.google.com/a/chromium.org/group/chromium-os-dev/topics'&gt;chromium-os-dev list&lt;/a&gt;. Still no luck on figuring out what I&amp;#8217;m doing wrong during the build process. I&amp;#8217;ve posted to the group so maybe I can get some help that way. I&amp;#8217;m committed to getting Chrome OS up and running though.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>iPhone OS 4.0, some Customer Development and Android-based Robots</title>
      <link href="http://hellosorld.com/daily-dose/2010/04/08/iphone-os-4-customer-development-and-android-based-robots.html"/>
      <updated>2010-04-08T00:00:00-04:00</updated>
      <id>http://hellosorld.com/daily-dose/2010/04/08/iphone-os-4-customer-development-and-android-based-robots</id>
      <content type="html">&lt;p&gt;Yes I have to link to the &lt;a href='http://www.engadget.com/2010/04/08/multitasking-comes-to-iphone-os-4-0/'&gt;iPhone OS 4.0 announcement&lt;/a&gt; today. The new OS will support multitasking of some sort, which means my main reason for &lt;a href='/tech/2010/02/01/why-the-ipad-will-fail.html'&gt;predicting the failure of the iPad&lt;/a&gt; is now unfounded. There&amp;#8217;s bound to be a lot of discussion around the new OS, which I will inevitably read and post about. Some other interesting stuff popped up today:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Steve Blank explains the &lt;a href='http://steveblank.com/2010/04/08/no-plan-survives-first-contact-with-customers-%E2%80%93-business-plans-versus-business-models/'&gt;difference between a business plan and a business model&lt;/a&gt;. (Hint: he thinks the former is a waste of time.)&lt;/li&gt;

&lt;li&gt;Some guys have developed a &lt;a href='http://robots.net/article/3011.html'&gt;robot called Truckbot&lt;/a&gt; that runs on Android. They have more videos and interesting info over at &lt;a href='http://www.cellbots.com/'&gt;cellbots.com&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Chrome OS build update&lt;/strong&gt;: I&amp;#8217;m in day three now. I made the mistake of not compiling with a &amp;#8220;local user&amp;#8221; account enabled, so I have to go back a few steps. It&amp;#8217;s been interesting though so far, and the guys in #chromium-os on IRC have been very helpful.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Hacking WinMo, Cuban on Customers and Wasting Time</title>
      <link href="http://hellosorld.com/daily-dose/2010/04/06/hacking-winmo-cuban-on-customers-and-wasting-time.html"/>
      <updated>2010-04-06T00:00:00-04:00</updated>
      <id>http://hellosorld.com/daily-dose/2010/04/06/hacking-winmo-cuban-on-customers-and-wasting-time</id>
      <content type="html">&lt;p&gt;Today was a pretty slow tech news day. Nevertheless a few interesting reads:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Wired describes the fad of hacking HTC Windows Mobile phones to &lt;a href='http://www.wired.com/gadgetlab/2010/04/windows-mobile-android/'&gt;run Android instead&lt;/a&gt;.&lt;/li&gt;

&lt;li&gt;Mark Cuban explains why you should &lt;a href='http://blogmaverick.com/2010/04/06/why-you-should-never-listen-to-your-customers/'&gt;never listen to your customers&lt;/a&gt;.&lt;/li&gt;

&lt;li&gt;And if you&amp;#8217;re looking to waste some time finding new domain names here&amp;#8217;s a good directory of &lt;a href='http://domaingroovy.com/'&gt;domain name tools&lt;/a&gt;. I really like &lt;a href='http://www.nxdom.com/'&gt;NXdom&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also I&amp;#8217;ll be attempting to build &lt;a href='/google/tech/2009/12/26/googles-chrome-os-is-a-commitment-mechanism.html'&gt;Google&amp;#8217;s Chrome OS&lt;/a&gt; later so look for a writeup of that.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>iPad Review Roundup</title>
      <link href="http://hellosorld.com/daily-dose/2010/04/02/ipad-review-roundup.html"/>
      <updated>2010-04-02T00:00:00-04:00</updated>
      <id>http://hellosorld.com/daily-dose/2010/04/02/ipad-review-roundup</id>
      <content type="html">&lt;p&gt;A few good iPad-related articles and reviews from yesterday and today. The Hacker News comments are pretty interesting as well so I&amp;#8217;ve linked to those too:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Davig Pogue looks at the iPad &lt;a href='http://www.nytimes.com/2010/04/01/technology/personaltech/01pogue.html'&gt;from two angles&lt;/a&gt; in the New York Times.&lt;/li&gt;

&lt;li&gt;(&lt;a href='http://news.ycombinator.com/item?id=1233530'&gt;HN discussion&lt;/a&gt;)&lt;/li&gt;

&lt;li&gt;Cory Doctorow &lt;a href='http://www.boingboing.net/2010/04/02/why-i-wont-buy-an-ipad-and-think-you-shouldnt-either.html'&gt;won&amp;#8217;t be buying an iPad&lt;/a&gt; and doesn&amp;#8217;t think you should either.&lt;/li&gt;

&lt;li&gt;(&lt;a href='http://news.ycombinator.com/item?id=1236722'&gt;HN discussion&lt;/a&gt;)&lt;/li&gt;

&lt;li&gt;John Gruber &lt;a href='http://daringfireball.net/2010/04/kids_are_all_right'&gt;sees things differently&lt;/a&gt; in &amp;#8220;The Kids Are All Right.&amp;#8221;&lt;/li&gt;

&lt;li&gt;(&lt;a href='http://news.ycombinator.com/item?id=1237078'&gt;HN discussion&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What&amp;#8217;s your favorite?&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Google Voice Releases a Long-Overdue Update</title>
      <link href="http://hellosorld.com/tech/2010/03/30/google-voice-releases-a-long-overdue-update.html"/>
      <updated>2010-03-30T00:00:00-04:00</updated>
      <id>http://hellosorld.com/tech/2010/03/30/google-voice-releases-a-long-overdue-update</id>
      <content type="html">&lt;p&gt;Last week &lt;a href='http://googlevoiceblog.blogspot.com/2010/03/faster-google-voice-experience-on.html'&gt;Google Voice released an update for Android&lt;/a&gt; that made the service essentially perfect as far as I&amp;#8217;m concerned. The update makes SMS and voicemail notifications to your Android phone appear almost instantly. Previously SMS and voicemail messages would take up to five minutes to appear on your phone. And in the early days of the service back in July 2009 it was taking even longer. I sometimes saw delays of up to 45 minutes back then, which obviously makes any kind of SMS conversation impossible.&lt;/p&gt;

&lt;p&gt;Without knowing for sure I&amp;#8217;d say that this update must change SMS and voicemail delivery from pull to push. Previously the Google Voice application running on your Android phone would poll the Google Voice server every five minutes, pulling in new messages at regular intervals. If you received a message just after one of those polls, you wouldn&amp;#8217;t see it on your phone until the next poll was sent. With push delivery, anytime the Google Voice server receives a message addressed to you it immediately sends it down to your phone.&lt;/p&gt;

&lt;p&gt;Push notification is very popular right now. New services like &lt;a href='http://boxcar.io/'&gt;Boxcar&lt;/a&gt; and &lt;a href='http://notifo.com/'&gt;Notifo&lt;/a&gt; allow developers to build push notification into their mobile apps. I&amp;#8217;m glad to see Google pushing forward in this direction with Google Vloice as well.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Journalism Isn't Dead Yet</title>
      <link href="http://hellosorld.com/personal/2010/02/26/journalism-is-not-dead-yet.html"/>
      <updated>2010-02-26T00:00:00-05:00</updated>
      <id>http://hellosorld.com/personal/2010/02/26/journalism-is-not-dead-yet</id>
      <content type="html">&lt;p&gt;I&amp;#8217;m in a &lt;a href='http://www.newsweek.com/id/234177'&gt;Newsweek article&lt;/a&gt; online today about &lt;a href='http://en.wikipedia.org/wiki/Generation_Y'&gt;&amp;#8220;Millenials&amp;#8221;&lt;/a&gt; and how the recession is affecting our work and careers. Check it out if you have five minutes to spare: &lt;a href='http://www.newsweek.com/id/234177'&gt;http://www.newsweek.com/id/234177&lt;/a&gt;.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Support the CTC Ten Foundation's Africa Project</title>
      <link href="http://hellosorld.com/personal/2010/02/20/support-the-ctc-ten-foundations-africa-project.html"/>
      <updated>2010-02-20T00:00:00-05:00</updated>
      <id>http://hellosorld.com/personal/2010/02/20/support-the-ctc-ten-foundations-africa-project</id>
      <content type="html">&lt;p&gt;Support CTC10: &lt;a href='http://ctcten.org/about/mission/sponsorship/raffle/'&gt;buy a $25 raffle ticket&lt;/a&gt; and you could win $2500!&lt;/p&gt;

&lt;p&gt;The CTC Ten Foundation was formed in honor of Christopher Campbell, my girlfriend&amp;#8217;s younger brother, who passed away suddenly in 2007. He was 21. The foundation carries out a mission to help children through soccer. With the generous support of Chris&amp;#8217;s family and friends, last year the foundation planned and built the brand new &lt;a href='http://blog.ryanmcgonigle.com/2009/02/05/chris-campbell-memorial-field-opening.aspx'&gt;Christopher Campbell Memorial Soccer Field&lt;/a&gt; in &lt;a href='http://ctcten.org/events/'&gt;Khayelitsha Township&lt;/a&gt; on the outskirts of Capetown, South Africa. The foundation has since erected a clubhouse at the field for community events and AIDS education for children, and the field has even hosted some &lt;a href='http://ctcten.org/multimedia/'&gt;famous visitors&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href='http://ctcten.org/about/'&gt;Read more about the foundation&lt;/a&gt; and &lt;a href='http://ctcten.org/project-goals/'&gt;its goals&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href='http://ctcten.org/about/mission/sponsorship/raffle/'&gt;Buy a raffle ticket for $25&lt;/a&gt; to support the CTC Ten Foundation and you could win $2500!&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Why the iPad Will Fail</title>
      <link href="http://hellosorld.com/tech/2010/02/01/why-the-ipad-will-fail.html"/>
      <updated>2010-02-01T00:00:00-05:00</updated>
      <id>http://hellosorld.com/tech/2010/02/01/why-the-ipad-will-fail</id>
      <content type="html">&lt;p&gt;On the way to work today I had my &lt;a href='http://www.google.com/phone'&gt;Nexus One&lt;/a&gt; hooked up to the car stereo, streaming Pandora Radio. I had Google Maps&amp;#8217; &lt;a href='http://www.google.com/mobile/navigation/'&gt;free turn-by-turn navigation feature&lt;/a&gt; enabled, talking to me in case I was distracted and forgot a turn. And I got a notification of a new email, which I responded to at a red light. All at the same time. All without having to stop and restart each application. Pandora was streaming the whole time. My turn-by-turn directions kept talking to me in the background. It was awesome.&lt;/p&gt;

&lt;p&gt;I don&amp;#8217;t understand how iPhone owners deal with the constant starting and stopping of their applications. And until the iPad OS can multi-task (and it may by the time it goes on sale) I don&amp;#8217;t see how the device can succeed.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Is a Web Site the Same As a Web App?</title>
      <link href="http://hellosorld.com/tech/2010/01/30/web-sites-vs-web-apps.html"/>
      <updated>2010-01-30T00:00:00-05:00</updated>
      <id>http://hellosorld.com/tech/2010/01/30/web-sites-vs-web-apps</id>
      <content type="html">&lt;p&gt;This is an article I wish I&amp;#8217;d found when I was starting out with web development. It&amp;#8217;s not meant to be an exhaustive discussion of what exactly makes up a web application. And it&amp;#8217;s written at a pretty low technical level, so hopefully it will inform and educate a few people and help to reveal how some of the software layers involved with web development work together. I will probably amend and rework this post as time goes on and I figure out better ways of explaining some of the concepts.&lt;/p&gt;

&lt;p&gt;First we need some background.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Servers and Clients&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When people talk about developing a web site, or a web app, or even a single web page, they are almost always working on something with a client/server architecture, althought they might not know it. This isn&amp;#8217;t actually complicated. A server is just a piece of software on a computer that &amp;#8220;listens&amp;#8221; for connections and requests and &amp;#8220;serves&amp;#8221; responses. A client is a piece of software that initiates connections and makes requests to a server and does stuff with the responses. (We use web clients every day, but we call them web browsers.) A lot of the time the concept of a server gets tied up with the particular computer the software is running on (as in, &amp;#8220;oh that box over there is my web server, and this one is my email server&amp;#8221;). This is purely because someone has decided to isolate a particular computer for performing a particular function and thus has it primarily running a particular server software. But the server is still the software, and most internet connected &amp;#8220;server&amp;#8221; computers are actually running multiple kinds of server software. For instance, a web server computer often is running not only a web server, but an ssh server and an ftp server, all listening for different kinds of connections and requests.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Legacy of HTTP and HTML&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now any client and server need a way to talk to one another that&amp;#8217;s agreed upon beforehand, something called a &amp;#8220;protocol.&amp;#8221; For web servers and web clients the standard protocol is the Hypertext Transfer Protocol, or HTTP. This simple protocol was designed for transferring specially formatted documents from a computer running web server software to a computer running a web browser, and for passing information back the other way. Those specially formatted documents are called HTML documents, short for Hypertext Markup Language. Think of an HTML document kind of like a Microsoft Word document, except that it&amp;#8217;s way more annoying to write. For a variety of reasons, including its simplicity, HTTP and the web server/browser ecosystem is the dominant way that computers interact on the internet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OK, so what&amp;#8217;s a web site?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A web site is just a collection of HTML documents sitting on a computer running web server software. Nothing special is going on. When a web client (a web browser like Google Chrome for instance) makes a connection to a web server, the client uses HTTP to ask for a particular HTML document. The server software then finds that document and returns it. Think of it kind of like a Powerpoint presentation. A collection of HTML documents is just like a collection of Powerpoint slides. They pretty much just display information. Often the HTML documents are linked together. In fact, that&amp;#8217;s what makes them collectively a &amp;#8220;site.&amp;#8221; Without links, the HTML documents are just single web pages. The links are a convenience for the web client. Instead of having to type in a new address every time you want a new HTML document, you can just click a link.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Then what&amp;#8217;s a web application?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is where things get interesting. A web application isn&amp;#8217;t a well-defined thing, so people may disagree with the way I think about this. But to me, a web application is software that you actually interact with to do something useful with data, running on an internet connected computer, which is also running web server software, so that you can connect to the computer (and in turn the web application) in a standard, well-known way, e.g. with your web browser. This is confusing, and the rest of this post is devoted to explaining the distinction between a web site and a web application in order to (hopefully) alleviate some of that confusion.&lt;/p&gt;

&lt;p&gt;The most confusing thing is that the way that you interact with a web site and a web application looks and feels the same from the outside. That&amp;#8217;s because programmers generally don&amp;#8217;t like to re-invent things that are already working and well-accepted. HTTP and HTML and web servers (like Apache) and web clients (like Firefox) are ubiquitous. So more and more complex ways of interacting with remote, internet-connected computers got built upon what started out as a simple, HTML document exchanging technology. The tools and interactions look the same on one level. Yes, your web browser is still talking HTTP to a web server, and the web server still responds (not always, but generally) with an HTML document. But if you go a little deeper there&amp;#8217;s a lot going on behind the scenes.&lt;/p&gt;

&lt;p&gt;The extra things that web applications do take place behind the web server. The web server software is just the gateway to the real application. You can&amp;#8217;t see what the actual application looks like by looking at the HTML a web server sends back to your browser. For instance, when you click to add a friend on facebook (which is most definitely a full-featured web application), how does facebook&amp;#8217;s software actually associate you with that person? There&amp;#8217;s no way to know, unless you can see facebook&amp;#8217;s source code. You can make educated guesses based on the HTML that you get from the web server, but you can&amp;#8217;t know for sure unless you see the source code of the software they have written. That&amp;#8217;s running behind the web server.&lt;/p&gt;

&lt;p&gt;This is the major distinction. A web site uses a web server to do what it was originally intended to do: serve HTML pages. A web application uses a web server as a gateway to the real application. And writing real applications is hard. You generally have to have a way to permanently store users&amp;#8217; information and data for your application to be useful. And you have to manage that data securely, only allowing access to bits and pieces based on who is trying to get at it. There are a lot of issues involved, and getting it all right is hard.&lt;/p&gt;

&lt;p&gt;But it&amp;#8217;s really fun to think and learn about. And the best part is that the technologies and standards are (almost) all open, so it&amp;#8217;s relatively easy to jump in. There are lots of ways to write applications behind web servers now. The most common is probably to use PHP, a programming language that&amp;#8217;s kind of designed for such uses. You can write applications in the Ruby programming language using a variety of frameworks such as Ruby on Rails and Sinatra. You can write them in the Python language using Django and Pylons. You can even write server-side applications in Javascript with node.js. There will be many many more in the future as people decide they don&amp;#8217;t like the existing options and create new alternatives.&lt;/p&gt;

&lt;p&gt;So there is a big difference between a web site and a web application. Although a lot of the technology is the same across both, web applications let you do more than just read HTML documents. They generally let you store and manipulate data and come back to it at a later time. They tend to display data conditional upon the particular user requesting it. And developing these kinds of applications is hard. I&amp;#8217;m glad I learned how to do it, and hopefully this post will help others to begin to learn as well.&lt;/p&gt;

&lt;p&gt;I look forward to answering any and all questions or comments below.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Google's Chrome OS is a Commitment Mechanism</title>
      <link href="http://hellosorld.com/google/tech/2009/12/26/googles-chrome-os-is-a-commitment-mechanism.html"/>
      <updated>2009-12-26T00:00:00-05:00</updated>
      <id>http://hellosorld.com/google/tech/2009/12/26/googles-chrome-os-is-a-commitment-mechanism</id>
      <content type="html">&lt;p&gt;Since June when Google announced it would be &lt;a href='http://googleblog.blogspot.com/2009/07/introducing-google-chrome-os.html'&gt;turning its Chrome web-browser into an operating system&lt;/a&gt; a lot of people have written about it. Google has now &lt;a href='http://googleblog.blogspot.com/2009/11/releasing-chromium-os-open-source.html'&gt;released the Chrome OS source code&lt;/a&gt; and netbook makers have already &lt;a href='http://blogs.zdnet.com/gadgetreviews/?p=9821'&gt;committed to shipping devices&lt;/a&gt; running the operating system next year. For a quick refresher on what the Chrome OS actually is see this &lt;a href='http://chrome.blogspot.com/2009/07/google-chrome-os-faq.html'&gt;FAQ&lt;/a&gt; or just watch this video:&lt;/p&gt;
&lt;object height='295' width='480'&gt;&lt;param name='movie' value='http://www.youtube.com/v/0QRO3gKj3qw&amp;hl=en_US&amp;fs=1&amp;' /&gt;&lt;param name='allowFullScreen' value='true' /&gt;&lt;param name='allowscriptaccess' value='always' /&gt;&lt;embed src='http://www.youtube.com/v/0QRO3gKj3qw&amp;hl=en_US&amp;fs=1&amp;' allowfullscreen='true' type='application/x-shockwave-flash' allowscriptaccess='always' height='295' width='480' /&gt;&lt;/object&gt;
&lt;p&gt;I have wanted an operating system like this for a long time (read two years). But many people think the Chrome OS is &lt;a href='http://www.wired.com/gadgetlab/2009/11/google-chrome-os-2/'&gt;too limited&lt;/a&gt;, &lt;a href='http://ultraorange.net/2009/11/21/google-chrome-os-i-am-so-unexcited-because-its-the-return-of-stupid-mainframe-computing/'&gt;too old-fashioned&lt;/a&gt; or just plain &lt;a href='http://theonda.org/articles/2009/11/28/after-more-thinking-ive-decided-that-chrome-os-is-stupid'&gt;stupid&lt;/a&gt;. I won&amp;#8217;t respond directly to those criticisms, but I will explain why I think Chrome OS is definitely the most promising software development of 2009.&lt;/p&gt;

&lt;p&gt;In economics and game theory there is this concept of a &amp;#8220;commitment mechanism&amp;#8221; &amp;#8211; something you choose to do now that might not be in your best interest in the short-term, but will restrict your future choices in a way that you know is optimal. For instance I choose all the time to avoid credit-cards with points-based rewards programs, because I know that if I have one I will waste way too much time trying to figure out how to maximize the value of my &amp;#8220;rewards.&amp;#8221; It&amp;#8217;s just not worth it in the end, so I choose to avoid those offers.&lt;/p&gt;

&lt;p&gt;Chrome OS is a commitment mechanism. By using it you commit yourself to using only hosted web-applications like Gmail, and Salesforce, and ING Direct, and Zoho, and 37signals. You commit yourself to this because you know that in the long run it is better for you. In a web-application only world you don&amp;#8217;t worry about what device you&amp;#8217;re using to access your applications and data; any device with a web-browser will do. You don&amp;#8217;t worry about your computer crashing; just get a new one with a web-browser and you&amp;#8217;re ready to go. You save money, since you don&amp;#8217;t need any expensive hardware in your computer. And you&amp;#8217;re more efficient, since your computer won&amp;#8217;t need as much power and you&amp;#8217;re not letting it sit unused all the time.&lt;/p&gt;

&lt;p&gt;No you can&amp;#8217;t run Microsoft Word or Adobe Photoshop on Chrome OS &lt;em&gt;right now&lt;/em&gt;. You can&amp;#8217;t run Mathematica or play Grand Theft Auto on Chrome OS &lt;em&gt;right now&lt;/em&gt;. That&amp;#8217;s the short-term cost of your commitment. But don&amp;#8217;t be too short sighted; Hosted web-applications are here to stay. And I have no doubt that we will see &amp;#8220;cloud&amp;#8221; versions of those applications within five years. In fact &lt;a href='http://bits.blogs.nytimes.com/2009/07/13/microsoft-office-2010-starts-ascension-to-the-cloud/'&gt;Microsoft Office will be in the cloud&lt;/a&gt; next year. That&amp;#8217;s the great thing about this commitment. By choosing this path you actually force application developers to move faster towards creating hosted and distributed &amp;#8220;cloud&amp;#8221; applications. And then everybody wins. Give credit to Google for pushing this vision forward, and providing the commitment mechanism we need.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Make Yourself Uncomfortable</title>
      <link href="http://hellosorld.com/personal/2009/10/29/make-yourself-uncomfortable.html"/>
      <updated>2009-10-29T00:00:00-04:00</updated>
      <id>http://hellosorld.com/personal/2009/10/29/make-yourself-uncomfortable</id>
      <content type="html">&lt;p&gt;In my short time trying to run a web-application startup one thing stands out: I am often very comfortable.&lt;/p&gt;

&lt;p&gt;I read a lot of stories about other founders and startups going through times of great stress and uncertainty. They wonder if they&amp;#8217;ll get funded. Or, if they&amp;#8217;re already funded, they don&amp;#8217;t know whether their next funding round will go through. If they are bootstrapping, they don&amp;#8217;t know whether they&amp;#8217;ll have a product that can cover costs early enough to keep going. They worry that users won&amp;#8217;t like a new feature. They worry that they can&amp;#8217;t develop new features faster than their competitors. The list is long.&lt;/p&gt;

&lt;p&gt;Certainly there were times when I was uncertain or uncomfortable. But comparatively I think those times were rare. This is almost certainly due to the fact that my poker winnings have afforded me and continue to afford me the time to pursue ideas at a relatively modest pace. I don&amp;#8217;t &lt;em&gt;need&lt;/em&gt; any particular idea to succeed. I&amp;#8217;m happy just to learn new things every day and work on projects that I love.&lt;/p&gt;

&lt;p&gt;But if there&amp;#8217;s one thing I took away from &lt;a href='http://startupschool.org'&gt;Startup School&lt;/a&gt; this year it was from &lt;a href='http://en.wikipedia.org/wiki/Paul_Buchheit'&gt;Paul Buchheit&amp;#8217;s&lt;/a&gt; life-story. I&amp;#8217;m not sure he actually said it, but I wrote in my notebook &amp;#8220;make yourself uncomfortable.&amp;#8221; I think this is really important to success and meeting whatever ambitions or expectations you have for yourself.&lt;/p&gt;

&lt;p&gt;Because that&amp;#8217;s the only way to really grow. That&amp;#8217;s the only way to really learn new things. Make yourself uncomfortable. Bite off more than you can chew. If you want your startup to succeed, promise something you might not be able to deliver. Either you&amp;#8217;ll come through, or you&amp;#8217;ll have learned a ton trying.&lt;/p&gt;

&lt;p&gt;If you&amp;#8217;re not uncomfortable some of the time in your job, or in your relationships, or in your life in general, then you&amp;#8217;re doing it wrong. For me, I&amp;#8217;ve been doing it wrong for too long. That stops now.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>I won't pay for that! It used to be free!</title>
      <link href="http://hellosorld.com/monetization/webapps/2009/09/16/3-33-i-wont-pay-for-that-cause-it-used-to-be-free.html"/>
      <updated>2009-09-16T00:00:00-04:00</updated>
      <id>http://hellosorld.com/monetization/webapps/2009/09/16/3-33-i-wont-pay-for-that-cause-it-used-to-be-free</id>
      <content type="html">&lt;p&gt;In a few discussions recently people have suggested a potential problem that could arise with the freemium monetization model for web-based applications (for a discussion of &amp;#8220;freemium&amp;#8221; see &lt;a href='http://en.wikipedia.org/wiki/Freemium'&gt;here&lt;/a&gt;). To explore the problem, consider an example: we&amp;#8217;ll pretend that you are running a web-based service that allows any doctor, anywhere in the world, to track and manage data about his or her patients. You don&amp;#8217;t charge doctors to use your service at first, but you do charge for a few premium features like a calendar and patient appointment email notifications.&lt;/p&gt;

&lt;p&gt;Now suppose the premium feature sales aren&amp;#8217;t bringing in enough money to cover costs, so you decide to start charging a small subscription fee to use the service. This would be akin to GMail announcing a $10 monthly subscription fee to have an account. How would the doctors using your service feel, and how would it translate into subscription sales?&lt;/p&gt;

&lt;p&gt;The argument I&amp;#8217;ve heard recently is that the users (doctors in our example) would desert the service en masse in anger at seeing a charge for something that was once free. Some friends have suggested that users would be less likely to pay in this situation than if you had just charged the fee from the beginning.&lt;/p&gt;

&lt;p&gt;I think this is ridiculous. There is no doubt that a lot of users would choose not to continue using the service in order to avoid the fee. And no doubt some users will happily stay (unless the price is excessive). What I want to argue is that the users who choose to leave would have never paid the fee in the first place.&lt;/p&gt;

&lt;p&gt;What it comes down to in my mind is value assessment. You are offering a service to people, and each of those people will value the service differently. When you put a price on your service, you automatically exclude those people who value the service at less than your price. There&amp;#8217;s nothing you can do about that. The question is whether providing something for free first and then putting a price on it will induce people to reduce the value they asses, and I think that&amp;#8217;s crazy. To believe that you have to believe there is a group of your users who originally valued your service more highly than the price you put on it, but who decide that your service isn&amp;#8217;t actually worth it after you start to charge that price.&lt;/p&gt;

&lt;p&gt;I actually think the opposite is probably true. That is, charging for a service that used to be free might actually induce people to adjust upwards the value they place on it. You will probably have an easier time converting someone from a free account than converting a new customer when you consider things like lock-in. And considering how much easier it is to assess the value of something you&amp;#8217;ve actually used rather than something you&amp;#8217;ve only read and heard about this seems rather obvious.&lt;/p&gt;

&lt;p&gt;I suppose there is a chance that your service appears really useful on paper so that people assess a high value for it, but once they start using it they realize it&amp;#8217;s not as useful as they thought. In this case you&amp;#8217;ll definitely want to charge people up front and get them locked in before they realize how crappy your product actually is. But that&amp;#8217;s an extremely cynical way to make money, and I would hope most people want to build a service they believe in.&lt;/p&gt;

&lt;p&gt;There will be users who are angry about having to pay if you start to charge for your service. But I think those users already valued your service at less than the price you&amp;#8217;ve put on it, and they&amp;#8217;d be even less likely to pay up front. I have no data on this, nor can I see a plausible way of collecting any. But if you have anecdotal evidence one way or the other I&amp;#8217;d love to hear about it in the comments.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>History of RushHQ (part II)</title>
      <link href="http://hellosorld.com/personal/2009/09/10/4-42-history-of-rushhq-part-two.html"/>
      <updated>2009-09-10T00:00:00-04:00</updated>
      <id>http://hellosorld.com/personal/2009/09/10/4-42-history-of-rushhq-part-two</id>
      <content type="html">&lt;p&gt;This is part two of a multi-part series detailing the history of my web startup &lt;a href='http://rushhq.com'&gt;RushHQ&lt;/a&gt;. Part one is &lt;a href='/personal/2009/07/24/14-45-history-of-rushhq-part-one.html'&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id='writing_rushhq_ourselves'&gt;Writing RushHQ Ourselves&lt;/h4&gt;

&lt;p&gt;Before the middle of April, 2008 David, Rick and I had assumed we would pay programmers to build RushHQ on top of the source code of CASManager, a product that David was selling to help International Baccalaureate schools manage their CAS programs. We would have had to buy the CASManager source code from Theodore and Faria Systems, the company David worked was working with. But once it became clear that I would have to fund the purchase and subsequent programming work out of my own savings, that path became much less attractive.&lt;/p&gt;

&lt;p&gt;So I convinced David and Rick that we could write the software ourselves, despite having no experience and no time. Luckily David took the initiative and started reading everything he could about Ruby on Rails (RoR), which is a web-application framework. CASManager is a RoR application, as are huge new sites like Twitter and Justin.tv, so it was a credible choice for us. It was also relatively new but had a huge community of developers using it and creating new features.&lt;/p&gt;

&lt;p&gt;So David worked really hard on learning RoR. In late April and early May I was very busy trying to finish my second-year paper for my PhD in Economics, so I didn&amp;#8217;t spend much time on learning the ways of web-programming and fell behind David. This would prove to be important later. I was at least able to contribute as our server administrator, building on the knowledge I had gained fiddling with Linux in 2000 and 2001. I also handled all of our DNS administration.&lt;/p&gt;

&lt;p&gt;On May 9th, 2008 David quit his job selling CASManager for Theodore to work on coding RushHQ. His quitting had a lot to do with the strained relationship between him and Theodore, Faria&amp;#8217;s founder. But his decision to quit gave him tons more free time to teach himself RoR and work on RushHQ, whereas I was again tied down with studying for my PhD general/comprehensive exams until I completed them in early June. (Admittedly I didn&amp;#8217;t actually study very hard since I was taking two of the rather easy exams, but I did pass at least.)&lt;/p&gt;

&lt;h4 id='david_and_andrew_move_to_georgia'&gt;David and Andrew Move to Georgia&lt;/h4&gt;

&lt;p&gt;It was in May that David and I worked out a deal with our mutual friend Adam&amp;#8217;s mother Judy. She was the director of an artists residency program in northern Georgia near a town called Dillard, and she kept a house nearby in the woods as both a vacation home and a place to stay during work visits. David and I wanted to seclude ourselves in that house in the woods to get a large chunk of RushHQ coded up. Luckily she needed some database work done for the residency program, so we exchanged database work for summer housing.&lt;/p&gt;

&lt;p&gt;As soon as I finished up my exams at Princeton in early June I drove down to Atlanta to meet up with David and pick up the mountain house key from Judy. (There&amp;#8217;s an amusing story related to my arrival in Atlanta but it&amp;#8217;s not appropriate for this post). David and I drove up to Dillard the same night.&lt;/p&gt;

&lt;p&gt;During our time in Georgia David and I (mostly David) made a lot of headway into RushHQ. But if you read my post &lt;a href='/personal/2009/07/27/9-33-writing-rushhq-2-0-part-I.html'&gt;here&lt;/a&gt; about writing a new version of RushHQ you&amp;#8217;ll remember that we made some naive decisions that I consider now to be mistakes. Most of those decisions were made in Georgia while we were really starting to put the basic pieces of RushHQ together. While in Georgia we also did a bit of hiking and tried to complete 1000 pushups in 24 hours or less (we couldn&amp;#8217;t).&lt;/p&gt;

&lt;h4 id='andrew_leaves_the_mountain_house'&gt;Andrew Leaves the Mountain House&lt;/h4&gt;

&lt;p&gt;Back in May David and I had also decided to move to San Francisco after the summer. There&amp;#8217;s no better place to write software and try to start a startup, so we had to go. We had agreed to live with our friend Dave Linder in an apartment that he would rent starting July 1st, and the plan was to move out to SF in August. Unfortunately my mother had planned a family trip to China for mid July, which would eat into the time I had to contribute to RushHQ. I also decided to leave the mountain house in GA before my trip to China to fly out to SF and handle the arrangements for the apartment with Dave. David later admitted that he was frustrated by my lack of commitment during our time in GA, which was justified considering my early departure. This became a point of contention later (see below).&lt;/p&gt;

&lt;p&gt;I was able to contribute quite a bit still by learning Subversion (the most popular scm at the time) and trying to get our application &amp;#8220;deployed&amp;#8221; to our server after returning from China.&lt;/p&gt;

&lt;h4 id='what_happened_to_rick_fox'&gt;What Happened to Rick Fox?&lt;/h4&gt;

&lt;p&gt;You might be wondering this. To be honest I don&amp;#8217;t exactly remember what Rick was doing this whole time. He had his full-time job still, and wasn&amp;#8217;t a programmer at all, so he didn&amp;#8217;t have much to do. We weren&amp;#8217;t communicating regularly. I think he probably worked on some marketing copy for the public website at some point.&lt;/p&gt;

&lt;h4 id='david_gets_angry'&gt;David Gets Angry&lt;/h4&gt;

&lt;p&gt;David put a lot of effort into RushHQ in its infancy. Almost the entire first iteration was his code. He was justifiably upset with me (and Rick) for not carrying our weight. And before I arrived in San Francisco in early August he called and told me he wanted to take the project and make it his own. He wanted me and Rick out.&lt;/p&gt;

&lt;p&gt;Needless to say I was not happy about this. I was moving to San Francisco to live and work with David. I wanted to work on RushHQ. Obviously there was no money from the business to fight about yet. It was mostly that I had put in some work already and I felt like I had a lot more to offer, so it was frustrating that David didn&amp;#8217;t see it that way.&lt;/p&gt;

&lt;p&gt;Making matters worse was that David incorporated the business in Delaware without discussing it with Rick and me. He also moved forward on asking our mutual friend Andrew Glantz to design the public website. Neither decision in isolation was a big deal. They were more symbolic of David&amp;#8217;s go-it-alone attitude at that point.&lt;/p&gt;

&lt;p&gt;So I arrived in San Francisco under these somewhat awkward circumstances. I remember having lots of discussions with David about how to move forward. Some of these involved me spinning off what existed of the RushHQ source code into a product for sororities. Most of the discussions involved me trying to explain to David that RushHQ wasn&amp;#8217;t his to take. It was a contentious time. A lot of trust was damaged.&lt;/p&gt;

&lt;h4 id='moving_towards_launch'&gt;Moving Towards Launch&lt;/h4&gt;

&lt;p&gt;But in the end David came around to the idea of the three of us working together still. I&amp;#8217;m not sure exactly how it all shook out. But I know that I started coding on the project again, and we started moving rapidly towards an early September launch. I remember coding a bunch of raw SQL during that time, since RoR&amp;#8217;s native ActiveRecord ORM doesn&amp;#8217;t handle JOINs very well.&lt;/p&gt;

&lt;p&gt;I made a lot of cosmetic changes to the application, trying to simplify and standardize the look and feel. David was trying to complete a few key features. We hired a flash programmer to take care of a crucial piece of RushHQ called DoorManager. The idea was to have fraternity members be able to set up a computer with a built-in camera so that recruits coming to rush events could submit their information and a photo to the fraternity&amp;#8217;s recruitment database. We needed the flash work done to hook into a computer&amp;#8217;s built-in camera.&lt;/p&gt;

&lt;p&gt;We collected email addresses for as many fraternity contacts as we could. David&amp;#8217;s girlfriend Sarah-Jane was amazingly helpful with that effort. She spent hours each day scouring fraternity websites for contact information.&lt;/p&gt;

&lt;p&gt;We were trying to launch before the start of the college rush season in late August, so things started moving very quickly. Andrew Glantz came up with a passable public website for us. David and Rick worked out some marketing copy they liked. I worked furiously getting up to speed on server administration tasks, and figuring out how to deploy a RoR application. In the end we ended up paying a little money for our hosting provider to deploy the app the first time.&lt;/p&gt;

&lt;p&gt;And after a couple of delays, we finally launched with an email to our contact list on September 5th, 2008. Little did we know that most of the hard work was still to come.&lt;/p&gt;

&lt;p&gt;Part III coming soon&amp;#8230;&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Don't Use Debit Cards</title>
      <link href="http://hellosorld.com/personal/2009/08/30/2-09-dont-use-debit-cards.html"/>
      <updated>2009-08-30T00:00:00-04:00</updated>
      <id>http://hellosorld.com/personal/2009/08/30/2-09-dont-use-debit-cards</id>
      <content type="html">&lt;p&gt;I talk to a lot of people who tell me they don&amp;#8217;t need or want a credit card because it&amp;#8217;s just easier to use a debit card for purchases, or they are worried about credit card interest. They are all wrong.&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s consider the following scenario: You are paid $1500 every two weeks, directly into your checking account, you have a debit card for that account, and you have a credit card with no annual fee that charges you 20% APR on any balance you hold after a 30-day grace period each month (fairly standard credit card terms).&lt;/p&gt;

&lt;p&gt;Now say at the beginning of the month you get your $1500. In the first week you end up spending $1300 because you had to buy a plane ticket to Tokyo. In the second week you end up spending $205 just on normal stuff like coffee and lunch and drinks after work. And just for the sake of argument let&amp;#8217;s assume you spend $250 in each of the third and fourth weeks, after you&amp;#8217;ve received another $1500.&lt;/p&gt;

&lt;p&gt;If you are using a credit card you get a bill for $2005 at the end of the month and have 30 days interest-free to transfer the money from your checking account. You pay no fees, and no interest, assuming you pay off the balance within 30 days of receiving the bill. That shouldn&amp;#8217;t be a problem since you&amp;#8217;ll have $3000 sitting in your account by the end of the month.&lt;/p&gt;

&lt;p&gt;But if you are using a debit card, you overdraw your account once in that month and have to pay the $30 (e.g.) overdraft fee. Not to mention you were probably stressing out a lot of the time, knowing that you were nearly out of money and wanting to avoid the overdraft charge. The $30 charge is effectively an interest rate, and it&amp;#8217;s much higher than the 20% APR you&amp;#8217;d pay carrying the same balance on your credit card. Even if you&amp;#8217;re only overdrawn for one day and for $1 you pay that flat fee.&lt;/p&gt;

&lt;p&gt;Consider this. You overdrew your account by $5 for a couple of days and were charged $30 (maybe two or three times more, if your bank &amp;#8220;conveniently&amp;#8221; tries to put the final charge through again). So you borrowed $5 from your bank for a couple of days. At 20% APR it would take almost ten years to accrue $30 in interest carrying a $5 balance on your credit card! Your bank is charging you that much interest just for a couple of &lt;em&gt;days&lt;/em&gt;! And they&amp;#8217;ll do it again and again if you&amp;#8217;re not careful to keep your balance positive.&lt;/p&gt;

&lt;p&gt;Generally this leads most people to leave a bunch of extra money in their checking accounts so as not to risk overdrawing. Checking accounts earn zero interest generally, so this effectively costs people the interest they could otherwise have earned putting their money to work somewhere else. Even if you never overdraw your account there is still this implicit cost. Granted it usually isn&amp;#8217;t very much money you could have otherwise earned, but it&amp;#8217;s something.&lt;/p&gt;

&lt;p&gt;So don&amp;#8217;t use debit cards. Use your credit card as a cashflow management tool. It&amp;#8217;s completely free if you pay off your balance before the grace period ends. And even if you don&amp;#8217;t, the interest you&amp;#8217;ll pay is much much less than you&amp;#8217;d pay your bank when you overdraw your account.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Don't Write Checks</title>
      <link href="http://hellosorld.com/personal/2009/08/28/1-02-dont-write-checks.html"/>
      <updated>2009-08-28T00:00:00-04:00</updated>
      <id>http://hellosorld.com/personal/2009/08/28/1-02-dont-write-checks</id>
      <content type="html">&lt;p&gt;Recently a friend discovered that somebody had forged checks with her account number on them and was slowly drawing down her account. The checks looked identical to hers, with the same routing and account numbers, but the name and address and signature belonged to someone else. The total amount lost was only about $350, but that&amp;#8217;s still significant.&lt;/p&gt;

&lt;p&gt;Now obviously this is the bank&amp;#8217;s fault. They should be checking the name, address and signature on each check and denying checks when any one of those doesn&amp;#8217;t match. And to be fair I think the bank will refund the money eventually. But my friend had to file a claim with her bank&amp;#8217;s insurance company, file a police report, get a bunch of things notarized, not to mention set up a new account, switch direct deposit and get a new atm card. That&amp;#8217;s pretty annoying.&lt;/p&gt;

&lt;p&gt;The interesting part of all of this is that banks are apparently insured enough against check fraud that it&amp;#8217;s not worth it to try to prevent it or even monitor for it, at least at relatively small amounts of money. Let&amp;#8217;s presume that it costs a nontrivial amount of money to monitor for check fraud. It&amp;#8217;s not too hard to see that from the bank&amp;#8217;s point of view, if the probability of check fraud occuring is very low or if the cost to the bank (the bank&amp;#8217;s &amp;#8220;co-pay&amp;#8221;) on average is very low, then it doesn&amp;#8217;t make sense to monitor for check fraud. And in general the amounts of money stolen through check fraud will be small, since it&amp;#8217;s nearly impossible to make any significant purchase by check.&lt;/p&gt;

&lt;p&gt;Presuming insurance companies know the banks have no incentive to monitor check fraud means the price of the insurance is higher than it otherwise would be. That cost is likely passed on to consumers through higher account fees and/or lower interest paid. And you still have to deal with all the hassle mentioned above. That&amp;#8217;s a double-whammy.&lt;/p&gt;

&lt;p&gt;So what can you do? Not a lot. But a good start would be to stop writing checks. If your checking account is with a major bank it seems pretty easy to forge a check with your account number on it, but at least you can make a potential fraudster work a little harder to find out what your number is.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>More On Apple vs. Google Voice</title>
      <link href="http://hellosorld.com/apple/google/mobile/tech/2009/07/29/4-48-more-on-apple-vs-google.html"/>
      <updated>2009-07-29T00:00:00-04:00</updated>
      <id>http://hellosorld.com/apple/google/mobile/tech/2009/07/29/4-48-more-on-apple-vs-google</id>
      <content type="html">&lt;p&gt;So I read another depressing account of what exactly happened with Apple&amp;#8217;s rejection of Google Voice and, a couple weeks earlier, Google Latitude:&lt;/p&gt;

&lt;p&gt;&lt;a href='http://gizmodo.com/5325539/apples-chickenshit-approval-process-has-gone-too-far'&gt;http://gizmodo.com/5325539/apples-chickenshit-approval-process-has-gone-too-far&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The important contradictions are these:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Yet here we are, Apple has rejected not one, but two Google apps that would deliver major new features to the iPhone, for reasons that are so obviously tripe it&amp;#8217;s insulting to even our non-exceptional intelligence. A Google Latitude app would confuse us? &lt;em&gt;Really?&lt;/em&gt; Because it would &amp;#8220;use Google to serve maps tiles&amp;#8221;? Wait. Isn&amp;#8217;t one of iPhone 3.0&amp;#8217;s major new features that it can use Google Maps inside of other applications? So like &lt;em&gt;every&lt;/em&gt; app can use Google to serve maps tiles. I admit, though, Latitude is a really big word. What does it even mean? That is pretty confusing. Maybe they should call it, like, Google Stalker.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;What happened with Google Voice is worse. Google didn&amp;#8217;t elaborate on the reason Apple gave for rejecting its official Google Voice app six weeks ago—and presumably, Google had more success wringing it out of Apple than most developers. Hours before Google broke the news, the developer of GV Mobile—a solid third-party app for Google Voice—said that it was being pulled from the App Store for &amp;#8220;duplicating iPhone features.&amp;#8221; Then every other Google Voice application was silently killed too. Even though, reportedly, Apple&amp;#8217;s Phil Schiller personally apologized when GV Mobile initially ran into problems getting approved months ago, and it&amp;#8217;d been sitting pretty in the store since then. Oh, and there are tons of other apps that duplicate the functions of dialing and sending text messages.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;And, for whatever reason, AT&amp;amp;T&amp;#8217;s fear is about Google Voice &lt;em&gt;on the iPhone&lt;/em&gt;, since the app is available for BlackBerry on their network.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Apparently AT&amp;amp;T claim that they are not involved in the application approval process, so they can&amp;#8217;t speak to this issue. I guess that&amp;#8217;s to be expected though, even if they were involved somehow.&lt;/p&gt;

&lt;p&gt;So as I suggested before this looks like Apple hating on Google for some reason. I don&amp;#8217;t have a clue why though. The article points out that Google gave the iPhone voice search and Maps and YouTube. Apple can&amp;#8217;t possibly see Google&amp;#8217;s Chrome OS as a threat worthy of retaliation, since Chrome OS is meant for netbooks and Apple doesn&amp;#8217;t compete in the netbook market (in fact, Apple thinks netbooks are stupid. See &lt;a href='http://www.engadget.com/2009/04/22/apple-reports-best-ever-march-quarter-with-a-1-21b-profit-call/'&gt;here&lt;/a&gt;). Unless Apple is planning a major move toward building its own telephone network I don&amp;#8217;t see how this makes sense.&lt;/p&gt;

&lt;p&gt;Anyway I&amp;#8217;ll repeat what I said yesterday; why buy a computer when the manufacturer can control what you install, supposedly for your own good? I&amp;#8217;ll be sticking with Android for a long time&amp;#8230;&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Apple Blocks Google Voice For The iPhone</title>
      <link href="http://hellosorld.com/tech/2009/07/28/12-19-apple-blocks-google-voice-on-iphone.html"/>
      <updated>2009-07-28T00:00:00-04:00</updated>
      <id>http://hellosorld.com/tech/2009/07/28/12-19-apple-blocks-google-voice-on-iphone</id>
      <content type="html">&lt;p&gt;After writing &lt;a href='/tech/2009/07/19/android-plus-google-voice-equals-(almost)-free-mobile-plan.html'&gt;this post&lt;/a&gt; about exploiting Google&amp;#8217;s seamless integration of Google Voice into the Android platform to reduce my cell bill, a few people asked me if something similar could be done with the iPhone. The answer was a tentative &amp;#8220;yes, eventually&amp;#8221; since Google expected to release a Google Voice application for the iPhone in the near future.&lt;/p&gt;

&lt;p&gt;Well I have some bad news. Yesterday the native iPhone Google Voice application was rejected from the iPhone app store supposedly because it duplicates features of the iPhone. You can read all the details on TechCruhch &lt;a href='http://www.techcrunch.com/2009/07/27/apple-is-growing-rotten-to-the-core-and-its-likely-atts-fault/'&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It looks a lot like AT&amp;amp;T is afraid of Google Voice eating into revenues from voice and sms plans, and it should be. But I find it hard to believe that AT&amp;amp;T could exert enough pressure on Apple to get this application blocked entirely against Apple&amp;#8217;s will. Especially after Apple Executive VP Phil Schiller apparently personally gave the GV app the go-ahead in April. So something a little weird is going on here.&lt;/p&gt;

&lt;p&gt;But anyway it&amp;#8217;s a big loss for iPhone users. And another reason not to own an iPhone. Apple still retains a ridiculous level of control over what you can and can&amp;#8217;t do with the device once you get it. Would you buy a computer if the manufacturer could prevent you from installing, say Microsoft Word, even years after you bought it? When your phone is actually just a handheld computer why should the decision be any different?&lt;/p&gt;

&lt;p&gt;If you&amp;#8217;re not already on Android, your next phone should be.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Writing RushHQ 2.0 (part I)</title>
      <link href="http://hellosorld.com/personal/2009/07/27/9-33-writing-rushhq-2-0-part-I.html"/>
      <updated>2009-07-27T00:00:00-04:00</updated>
      <id>http://hellosorld.com/personal/2009/07/27/9-33-writing-rushhq-2-0-part-I</id>
      <content type="html">&lt;p&gt;RushHQ is primarily written in Ruby using the Rails framework, with a little javascript on top. RushHQ was the first Ruby on Rails application that David and I built, and we did a lot of things wrong (in retrospect). Thus I am rewriting most of the RushHQ codebase in order to make it cleaner and more extensible. This has the dual benefits of vastly increasing the ease of feature changes and updates, as well as making the actual thought of programming for RushHQ tolerable again.&lt;/p&gt;
&lt;h4&gt;Switching SCMs&lt;/h4&gt;
&lt;p&gt;First I moved a copy of the project code into a new git repository. This was easy (thank you git!). I just made a local copy of the project&amp;#8217;s working tree, initialized a new git repository and added and committed everything. On the server I initialized an empty bare git repository and just pushed the local repository to the remote one. Done.&lt;/p&gt;
&lt;h4&gt;Switching Database Engines&lt;/h4&gt;
&lt;p&gt;When we wrote RushHQ originally we used the RoR default SQLite database engine. SQLite has the advantage of being very easy to work with because it&amp;#8217;s file-based. There&amp;#8217;s no need to setup and administer a database server so you can get up and running right away without any hassle. Thus it&amp;#8217;s great for development work. I don&amp;#8217;t think it&amp;#8217;s that great in a production environment. Dealing with named files to store our databases made me nervous. What if I acidentally renamed one or moved one or deleted one while I was trying to back them up? If someone managed to gain access to our server he could just take the data. And there isn&amp;#8217;t any way that I know of to set user-level permissions for &lt;span class=&quot;caps&quot;&gt;SQL&lt;/span&gt; statements on SQLite databases, although admittedly I didn&amp;#8217;t look too hard. So there isn&amp;#8217;t the extra layer of security that a database server gives you.&lt;/p&gt;
&lt;p&gt;So I decided to move our datastore over to MySQL. This required installing the mysql-client and mysql-server plus some development headers on our production system, installing the ruby-mysql bindings and a quick relearning of the mysqladmin commands to set up and secure the MySQL server.&lt;/p&gt;
&lt;h4&gt;Setting up a Staging Deployment&lt;/h4&gt;
&lt;p&gt;To test out all the nifty new features of RushHQ before pushing them to the main rushhq.com deployment I wanted to set up a staging deployment. I set up a subdomain and configured Apache to use Passenger rather than Mongrel, so all I had to do was point the document root in Apache to the /public directory of my deployed code. Ok I also had to fool around with permissions on that directory until I stopped seeing &amp;#8220;403 Forbidden&amp;#8221; from Apache every time.&lt;/p&gt;
&lt;p&gt;All of the above tasks should have taken me less than an hour but of course extra issues crept in, like the fact that our ssl certificate is only good for rushhq.com and www.rushhq.com domains. So I had to disable it for the staging deployment.&lt;/p&gt;
&lt;h4&gt;The Real Work Begins&lt;/h4&gt;
&lt;p&gt;We made what I consider now to be a poor database design choice early-on while developing rushhq. We decided that each user would belong to one (and only one) fraternity. Users did not exist as individuals outside of their fraternity. This probably seems fine logically since you can&amp;#8217;t really belong to more than one fraternity at once. But it led us to store each fraternity&amp;#8217;s data in a separate database. That includes all the user data for each fraternity&amp;#8217;s members, which would normally include authentication credentials like a username and password.&lt;/p&gt;
&lt;p&gt;If you&amp;#8217;re not shocked yet I&amp;#8217;ll explain a little further. With user data spread over tons of databases, how do you look up a username and password when someone comes to rushhq.com and wants to log in? There&amp;#8217;s no way to know which database to search for that information ahead of time. So you could just step through each database looking through all the user data until you find a match, but that&amp;#8217;s gross and pretty inefficient. So we decided on something potentially more gross but more efficient: we set up another database to house all information that we might need to look up globally. And since we couldn&amp;#8217;t (or at least didn&amp;#8217;t want to try too hard to) do an &lt;span class=&quot;caps&quot;&gt;SQL&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;JOIN&lt;/span&gt; accross databases in order to return the rest of a user&amp;#8217;s data after a successful authentication, we ended up storing some redundant information in the global database.&lt;/p&gt;
&lt;p&gt;Now you should be sufficiently shocked. Yes I know that eliminating redundancy is crucial to data normalization to make maintaining data integrity easy. And to be honest I don&amp;#8217;t remember all the justifications we had, but one was ease of data restoration. This design combined with SQLite meant we only had to drop in a backup of a fraternity&amp;#8217;s database file to fully resotre its data if something went wrong. I also remember that we wanted to eliminate potential scope issues, like accidentally showing a fraternity recruits from a different chapter or allowing a fraternity to delete users from a competing chapter.&lt;/p&gt;
&lt;p&gt;The price paid for those conveniences was large in retrospect. We had to write a lot of extra code to switch database connections on the fly in order to create and update information in more than one location. We sometimes had to perform two identical sets of database operations (one on the global database, one on a fraternity&amp;#8217;s individual database) which is really bad. In general trying to maintain code like that was a nightmare. Things would break a lot of the time. So I would make a very different decision now to stick with the more traditional single database model.&lt;/p&gt;
&lt;p&gt;And that&amp;#8217;s what I&amp;#8217;m doing; rewriting RushHQ on top of a single database model. It&amp;#8217;s such a fundamental change that I&amp;#8217;m going to be rewriting basically all of the RushHQ code. But not from scratch at least. A lot can be tweaked and reused rather than discarded.&lt;/p&gt;
&lt;p&gt;My next post will get into a little more detail about specific data modeling choices now that RushHQ is free from the tyranny of multiple databases.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>History of RushHQ (part I)</title>
      <link href="http://hellosorld.com/personal/2009/07/24/14-45-history-of-rushhq-part-one.html"/>
      <updated>2009-07-24T00:00:00-04:00</updated>
      <id>http://hellosorld.com/personal/2009/07/24/14-45-history-of-rushhq-part-one</id>
      <content type="html">&lt;p&gt;This is the first of what will be a multi-part series of posts about RushHQ, the fraternity web-software project and company I&amp;#8217;ve been working on building for the last year and a half. I plan to make these pretty detailed accounts to the best of my recollection. I&amp;#8217;m also planning to write a series of posts detailing the current changes to the software that I&amp;#8217;m making. Those posts will likely be painfully boring to most people so I&amp;#8217;ll try to keep this series at a more interesting non-software level.&lt;/p&gt;
&lt;h4&gt;The Beginning&lt;/h4&gt;
&lt;p&gt;In Late January of 2008 David Kahn and Rick Fox, two friends of mine from Penn, approached me about starting a small software company. The three of us were members of the Sigma Alpha Mu fraternity at Penn, where Both Rick and David were recruitment chairs in consecutive years, and I had served as treasurer. They wanted to develop an online software product that would help fraternity chapters manage the recruitment of new members each year. We had a pretty good idea of where the pain-points and bottlenecks in the recruitment process existed, so we felt that it was really just a matter of executing and building out a product with the features we would have wanted. Rick and David both had marketing degrees from Wharton, so once we had the product built it would be simple to sell (see upcoming part IX on how this turned out).&lt;/p&gt;
&lt;p&gt;At the time David was working with a small software startup called Eduvo that had developed a web-based product targeted at International Baccalaureate high schools. Eduvo&amp;#8217;s product already had a lot of the kinds of features we wanted to include in our recruitment software, so David was hoping to use the code they had developed to spin-off this fraternity idea. The initial plan was to license the existing source-code from Eduvo, and hire Eduvo&amp;#8217;s programmer to re-mold it slightly for our purposes. This would have likely cost a few thousand dollars, which is where I came in handy, since I had a bunch of money saved up from playing poker.&lt;/p&gt;
&lt;p&gt;So during this very early stage there were a lot of discussions about how to proceed. We discussed trying to license the Eduvo code for equity in our (still non-existent) company rather than paying cash. We discussed how we might offer equity to the programmer we would hire. We discussed how we would split equity ourselves. But none of us really knew anything about how to structure a startup so a lot of that talk looks very silly in retrospect.&lt;/p&gt;
&lt;p&gt;In the midst of all these discussions some actual work did get done. In early February we started to put together a list of fraternity chapters and contact info. Rick and David worked for a bit on a market research survey involving something called &amp;#8220;the four C&amp;#8217;s&amp;#8221; of consumer research. It was decided that the official company song would be &amp;#8220;Fly by Night.&amp;#8221; We checked out some other online products that seemed to be offering similar features, and of course decided that ours was different and would be better. We tried to come up with a name for the product and the company based on available .com domains. And we started negotiating with Theodore, Eduvo&amp;#8217;s founder, about how to license the source code.&lt;/p&gt;
&lt;p&gt;It became clear that he wanted cash (naturally), but we wanted to wait until we had some interest from fraternities before throwing a bunch of money into this project. At least I did, and I was the one with the money. My doubts at the time mostly had to do with ignorance. That is, I didn&amp;#8217;t know enough about web-based software (or software in general) to adequately judge the quality of what we would be getting, and therefore I couldn&amp;#8217;t determine a fair price. I had taught myself &lt;span class=&quot;caps&quot;&gt;HTML&lt;/span&gt; back in 1998 and had taken some algorithms and data-structures classes in C++ and Java as a high school student and a college freshman, but I hadn&amp;#8217;t thought about programming or software since 2003. Nor had I ever tried to sell anything, and I wasn&amp;#8217;t sure this particular product would sell.&lt;/p&gt;
&lt;p&gt;I remember beginning to think that we should write the software ourselves. It couldn&amp;#8217;t be that hard could it? And then we would know exactly what we were getting and we wouldn&amp;#8217;t have to wait for some programmer we hired (possibly working only for equity) to make changes or add features. Luckily we saw a way forward that didn&amp;#8217;t preclude that possibility. We would start to mock up screen-shots of the site based on Eduvo and pitch the idea to Sigma Alpha Mu&amp;#8217;s national office. We could even put it up on the web and give people non-functional demonstrations to generate interest. In the best case SAM&amp;#8217;s national office would pay us to develop the product in exchange for a lifetime license, and we could then license the code from Eduvo and hire a programmer to tweak it.&lt;/p&gt;
&lt;p&gt;By late February David had already put together a set of screen-shots that mocked up what the product might eventually look like. We had decided on the name RushHQ after rejecting SeekGreek and RushPlus so I went about putting up the screen shots at rushhq.com. I even spent a bunch of time writing a simple MySQL database-backed authentication system in php so that we could set up demo accounts and control access. Rick was working his contacts at the &lt;span class=&quot;caps&quot;&gt;SAM&lt;/span&gt; national office and was making progress generating interest. And by March 10th we had a full demo up on the web. Nothing worked of course, but it was a big step.&lt;/p&gt;
&lt;p&gt;And then things kind of died. David, Rick and I stopped communicating as frequently. Conversations with the &lt;span class=&quot;caps&quot;&gt;SAM&lt;/span&gt; national office were ongoing, but not getting anywhere fast. Finally on April 15th Andy Houston at &lt;span class=&quot;caps&quot;&gt;SAM&lt;/span&gt; national confirmed that they were not interested.&lt;/p&gt;
&lt;p&gt;Thus the stage was set for us to build the software ourselves. I pitched the idea pretty hard to David and Rick who eventually agreed that it was probably the best way forward. Rick had a full-time marketing job and wasn&amp;#8217;t interested in programming anyway, David still had a full-time job with Theodore at Eduvo, and I was still a full-time economics PhD student trying to finish my coursework, write my second-year paper and pass two general qualifying exams. So we had a little bit of a problem: nobody actually had any time to write the software.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/personal/2009/09/10/4-42-history-of-rushhq-part-two.html&quot;&gt;&amp;raquo; Continue to part II&lt;/a&gt;&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Submitting to Social Networks (results)</title>
      <link href="http://hellosorld.com/personal/2009/07/24/10-15-submitting-to-social-networks-%28results%29.html"/>
      <updated>2009-07-24T00:00:00-04:00</updated>
      <id>http://hellosorld.com/personal/2009/07/24/10-15-submitting-to-social-networks-(results)</id>
      <content type="html">&lt;p&gt;This is a follow up to my post &lt;a href=&quot;/personal/2009/07/23/submitting-to-social-networks.html&quot;&gt;here&lt;/a&gt;. Basically I&amp;#8217;ve been fooling around with Google Analytics and wanted to post some numbers.&lt;/p&gt;
&lt;p&gt;These are the referral numbers I got after submitting links to this blog on three social network sites:&lt;/p&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;th style=&quot;text-align:left;padding:0 50px 0 0;&quot;&gt;site&lt;/th&gt;
		&lt;th style=&quot;text-align:left;padding:0 10px 0 0;&quot;&gt;referrals&lt;/th&gt;
		&lt;th style=&quot;text-align:left;padding:0 10px 0 0;&quot;&gt;pages/visit&lt;/th&gt;
		&lt;th style=&quot;text-align:left;padding:0 10px 0 0;&quot;&gt;avg time here&lt;/th&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Facebook&lt;/td&gt;
		&lt;td&gt;14&lt;/td&gt;
		&lt;td&gt;3.64&lt;/td&gt;
		&lt;td&gt;3&amp;#8217;58&amp;quot;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Twitter&lt;/td&gt;
		&lt;td&gt;2&lt;/td&gt;
		&lt;td&gt;2.5&lt;/td&gt;
		&lt;td&gt;2&amp;#8217;09&amp;quot;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Digg&lt;/td&gt;
		&lt;td&gt;2&lt;/td&gt;
		&lt;td&gt;1&lt;/td&gt;
		&lt;td&gt;0&amp;#8217;0&amp;quot;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;So not only did Facebook provide the most referrals but the highest quality referrals as well. People coming to the site from Digg apparently left immediately. Surprisingly enough a couple people from Twitter found the blog and actually stuck around. And one of them was from Germany.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ll probably post more GA numbers here soon since I&amp;#8217;m spending a lot of time looking at them&amp;#8230;&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Submitting To Social Networks</title>
      <link href="http://hellosorld.com/personal/2009/07/23/submitting-to-social-networks.html"/>
      <updated>2009-07-23T00:00:00-04:00</updated>
      <id>http://hellosorld.com/personal/2009/07/23/submitting-to-social-networks</id>
      <content type="html">&lt;p&gt;As a bit of an experiment I just submitted my post about Android and Google Voice to Digg (&lt;a href=&quot;http://digg.com&quot; target=&quot;_blank&quot;&gt;digg.com&lt;/a&gt;) under Technology &amp;#8594; Gadgets. I also just put out my first Facebook status update ever, announcing this blog and providing a link. And just for fun I sent out my first tweet ever about the Google Voice post as well (well second tweet, technically, if you count my original tweet when I signed up).&lt;/p&gt;
&lt;p&gt;I expect Facebook to win in terms of driving traffic here. I&amp;#8217;m not exactly sure but I think the people who will actually get my status update on Facebook are people in my network of friends. Those people presumably care more about what I have to say than people perusing the gadget category on Digg. And I only have nine followers on Twitter, almost all of which are spammers I think. I know one is @icanhascheezburger, i.e. the lolcats twitter spambot (see &lt;a href=&quot;http://en.wikipedia.org/wiki/Lolcat&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt; for an explanation of lolcats). They started to follow me after I started following them when I first signed up.&lt;/p&gt;
&lt;p&gt;Anyway if Facebook doesn&amp;#8217;t win I&amp;#8217;ll be shocked. I&amp;#8217;ll be back with numbers and results late late tonight or tomorrow morning.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;update&lt;/strong&gt;: results are &lt;a href=&quot;/personal/2009/07/24/10-15-submitting-to-social-networks-(results).html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>The Joy Of Git</title>
      <link href="http://hellosorld.com/tech/2009/07/22/the-joy-of-git.html"/>
      <updated>2009-07-22T00:00:00-04:00</updated>
      <id>http://hellosorld.com/tech/2009/07/22/the-joy-of-git</id>
      <content type="html">&lt;p&gt;I&amp;#8217;ve been fooling around a lot with Git recently and it totally blows Subversion out of the water.&lt;/p&gt;
&lt;p&gt;First, a little background. Both Git (git) and Subversion (svn) are &amp;#8220;Version Control&amp;#8221; or &amp;#8220;Source Code Management&amp;#8221; systems, which is software used by software developers to track changes to a project&amp;#8217;s source-code. A lot of times a project will contain hundreds if not thousands of separate source-code files that all depend on each other. If you have more than one developer working on a project of that magnitude it is a nightmare to keep track of the changes each is making and merge them together in a way that doesn&amp;#8217;t completely break the code. Some sort of version control system is absolutely necessary.&lt;/p&gt;
&lt;p&gt;When I started writing software in earnest about this time last year Subversion was still kind of the standard scm system. It was used to manage a lot of popular open-source software projects, including Ruby on Rails, which was the web-framework I was using at the time. Google also uses it to provide source-code hosting at code.google.com. So I jumped in.&lt;/p&gt;
&lt;p&gt;Subversion is great if you&amp;#8217;ve got a little patience and haven&amp;#8217;t ever used scm before. It&amp;#8217;s probably great even if you haven&amp;#8217;t, given its popularity then and even now. The way it works is this: you set up a repository on a server that each developer can access. This becomes the central authoritative location for your project&amp;#8217;s files. Then each developer can &amp;#8220;checkout&amp;#8221; a copy of the code and work on it on her own, merging back (called &amp;#8220;committing&amp;#8221;) only the changes she wants to when she&amp;#8217;s ready. Subversion handles the merge intelligently, and only bothers you when you try to commit something that interferes with another developer&amp;#8217;s change. Two developers can edit the same file, but as long as they don&amp;#8217;t edit the same individual lines of that file Subversion won&amp;#8217;t complain. There&amp;#8217;s obviously a lot of extra stuff you can do with it, but that&amp;#8217;s the basic idea.&lt;/p&gt;
&lt;p&gt;But then Linus Torvalds gave us Git. The idea with Git is distributed version control. Now instead of one single authoritative repository, each developer has his own local repository and commits changes to it. Each local repository carries the same weight as the central repository (if there is one). When a developer is ready to merge local changes with the central repository he just &amp;#8220;pushes&amp;#8221; his repository out to the central one. Everyone else can get his changes by &amp;#8220;pulling&amp;#8221; from the central repository once he&amp;#8217;s pushed. Again conflicts are handled intelligently, and in fact the ease of handling conflict resolution in Git is one of it&amp;#8217;s major benefits over Subversion.&lt;/p&gt;
&lt;p&gt;Now this probably doesn&amp;#8217;t sound too different from the Subversion description, because it&amp;#8217;s not. The real benefit of Git comes from being able to share code quickly and easily. With Subversion it&amp;#8217;s a hassle to set up an open-source repository. You have to worry about commit permissions and access control. It&amp;#8217;s also pretty annoying to set up a repository in general with Subversion compared to Git. There are separate commands for repository administration and repository use. Telling Subversion which files to ignore is a multi-step exercise involving still more commands. And Subversion gets easily confused when you delete or rename a file without telling it. Git handles all of these things so smoothly that it&amp;#8217;s hard to believe I had to worry so much about them before with Subversion.&lt;/p&gt;
&lt;p&gt;So I&amp;#8217;ve been converted. So has Ruby on Rails apparently, because it is now managed by Git. And GitHub (&lt;a href=&quot;http://github.com&quot; target=&quot;_blank&quot;&gt;github.com&lt;/a&gt;) has quickly become one of the most popular code-sharing sites on the internet. Sign up for a GitHub account and give Git a try if you haven&amp;#8217;t already. I think you&amp;#8217;ll agree that it&amp;#8217;s a joy to use.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>On Hating Software</title>
      <link href="http://hellosorld.com/software/2009/07/22/on-hating-software.html"/>
      <updated>2009-07-22T00:00:00-04:00</updated>
      <id>http://hellosorld.com/software/2009/07/22/on-hating-software</id>
      <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.codinghorror.com/blog/archives/001289.html&quot; target=&quot;_blank&quot;&gt;www.codinghorror.com/blog/archives/001289.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Writing software makes you hate bad software since you generally have ideas about how it could have been done better. That doesn&amp;#8217;t necessarily mean you think your software is good though. It just means you end up hating your own software as well.&lt;/p&gt;
&lt;p&gt;The problem is that writing software is hard. And once you have something working you will do a lot of mental gymnastics to convince yourself that it doesn&amp;#8217;t need to change. It&amp;#8217;s kind of like building a highway through a city. A ton of time was spent building streets and parks and office-buildings and other infrastructure, and it all works pretty well. But now you want people to be able to get around &lt;strong&gt;faster&lt;/strong&gt; using a highway. So now you have to somehow decide the best way to do that without completely disrupting the already functioning city below. A bunch of stuff is going to get destroyed, and in the process a lot of things won&amp;#8217;t work for a little while, and it takes a long time and costs a lot of money.&lt;/p&gt;
&lt;p&gt;So you sometimes end up with situations like in Washington, DC, where they started to connect I95 through downtown but only got halfway through. And in software a lot of times you end up with these kind of workaround solutions, created so that you don&amp;#8217;t have to completely destroy what you started with. And you know you could have done it better. And you hate your software because you know what it could have been.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Android + Google Voice = (almost) Free Mobile Plan</title>
      <link href="http://hellosorld.com/tech/2009/07/19/android-plus-google-voice-equals-%28almost%29-free-mobile-plan.html"/>
      <updated>2009-07-19T00:00:00-04:00</updated>
      <id>http://hellosorld.com/tech/2009/07/19/android-plus-google-voice-equals-(almost)-free-mobile-plan</id>
      <content type="html">&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;: Here is a great resource for &lt;a href='http://docs.google.com/Doc?docid=0Ae8glDUXDsh9ZGR2eG43cjRfMzNkOTM4ZjNjeA&amp;amp;hl=en'&gt;setting up Google Voice with VoIP services&lt;/a&gt; to eliminate your mobile calling plan altogether. Of course you&amp;#8217;ll need a data plan for IP connectivity, but those are much cheaper than conventional minute-based calling plans.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;: T-Mobile has discontinued the plan referenced in this article. The cheapest T-Mobile plan with MyFaves is currently $39.99 for 300 whenever minutes and unlimited nights and weekends. With an unlimited data plan at $24.99 the total bill would come to about $65 plus a little extra for taxes. That&amp;#8217;s still pretty good for an unlimited calling and data plan, but not as great as I previously advertised.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;I have an Android phone. About two weeks ago I got an invite to Google Voice. Together they reduce my mobile phone bill by $45 per month.&lt;/p&gt;

&lt;p&gt;If you haven&amp;#8217;t heard of Google Voice you should check it out &lt;a href='http://www.google.com/googlevoice/about.html' target='_blank'&gt;here&lt;/a&gt; and sign up for an invite. Basically Google gives you a phone number (that you can choose) that will ring any (or all) of your phones when called. There are a bunch of other features like one location to check all of your voicemail, transcription of voicemail into text (still very much a work in progress), and &lt;a href='http://www.google.com/support/voice/bin/answer.py?answer=141925' target='_blank'&gt;super-cheap
international rates&lt;/a&gt;. Oh and did I mention all domestic calls and sms messages through Google Voice are free?&lt;/p&gt;

&lt;p&gt;Here&amp;#8217;s how it works (note that this is not VoIP): when someone calls your GV number, GV rings up whichever phones you&amp;#8217;ve specified and connects the call. The call that you receive actually comes from your GV number, but they&amp;#8217;ve sorted it out so that caller id still works seamlessly. This is the potentially annoying part: when you want to place a call through GV, you have to start it within the online GV system. The same is true for sms messages. For calls, the GV system dials the number you specify and then rings up your phone as well to connect the call. Again the call you receive is from your GV number, and the recipient sees your GV number as the source.&lt;/p&gt;

&lt;p&gt;Using the above system I would probably never place a call through Google Voice. But of course Google decided to make my life awesome by introducing a GV mobile phone application for Android phones that integrates GV with your phone&amp;#8217;s software and does all of the above for you automatically. I can now just place calls like I always have from my mobile phone and GV takes over.&lt;/p&gt;

&lt;p&gt;So how does this save me money? If you were reading closely you&amp;#8217;ll have noticed that with GV all of the calls I make are either to or from one number: my GV number. T-mobile, my cell carrier, offers plans with a feature called myFaves where you can select five numbers for which all of your calls are free. All I had to do was get the cheapest plan that gave me myFaves and make my GV number one of them. This plan costs $9.99, whereas I was paying $49.99 before. With reduced taxes this saves me about $45 per month. If I was paying for unlimited texting I would have saved more, since I don&amp;#8217;t need an sms plan anymore either. Of course I still need the unlimited data plan at $24.99, but I was already paying for that.&lt;/p&gt;

&lt;p&gt;I highly recommend this setup to anyone considering a new smartphone.&lt;/p&gt;</content>
    </entry>
  
    <entry>
      <title>Why I Quit My Phd In Economics</title>
      <link href="http://hellosorld.com/personal/2009/07/16/why-i-quit-my-phd-in-economics.html"/>
      <updated>2009-07-16T00:00:00-04:00</updated>
      <id>http://hellosorld.com/personal/2009/07/16/why-i-quit-my-phd-in-economics</id>
      <content type="html">&lt;p&gt;A lot of people ask me what happened at Princeton that made me want to leave the PhD program in economics there. The short answer is that I decided I didn&amp;#8217;t want to be an economist.&lt;/p&gt;
&lt;p&gt;The long answer is this:&lt;/p&gt;
&lt;p&gt;A PhD in any field is not something one should take lightly. It requires a lot of dedication to an (often narrow) idea, and not many people will care enough to try to understand what you are saying. This may seem obvious, but I guess it wasn&amp;#8217;t to me as I applied to graduate school.&lt;/p&gt;
&lt;p&gt;I applied to programs in economics perhaps foolishly thinking that I could put my love of math to use on problems that might actually impact people&amp;#8217;s lives. (Also I knew I didn&amp;#8217;t have the dedication or talent to pursue a PhD in mathematics, a common trait among econ PhDs). But I pretty quickly realized that producing something that the world could use to improve itself would be hard.&lt;/p&gt;
&lt;p&gt;Now don&amp;#8217;t get me wrong, I enjoy working on hard problems, as long as there&amp;#8217;s a reasonable expectation of success. But producing good economic work is a highly creative endeavor, and one at which I don&amp;#8217;t think I&amp;#8217;m particularly skilled. I think that was probably my biggest realization; you can be very smart, do well in college, learn quickly, etc., but if you can&amp;#8217;t think creatively in your field you will have a hard time completing a PhD and pursuing a career as an academic.&lt;/p&gt;
&lt;p&gt;So I started to see things this way: in the distribution of creative economic thinkers, I am somewhere near the middle. Thus the probability of me producing some great economic work that changes the world is pretty low. The probability of me becoming an average economist is very high. And I don&amp;#8217;t like to think about what my life as an average economist would be.&lt;/p&gt;
&lt;p&gt;But Bill Easterly pushed me over the top. For those of you who don&amp;#8217;t know, Bill Easterly is an economist who has come out strongly against providing unconstrained aid to the developing world because the data shows that it doesn&amp;#8217;t work. Check out his wikipedia page &lt;a href=&quot;http://en.wikipedia.org/wiki/William_Easterly&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; or his book &lt;a href=&quot;http://www.amazon.com/White-Mans-Burden-Efforts-Little/dp/0143038826/&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;. I went to a talk he gave at Columbia when I was at Princeton. The gist of the talk was this: throwing aid at governments is useless more often than not, because there&amp;#8217;s too often no accountability to the donors and almost always no feedback loop to gather input from the citizens the aid is intended to help. He recommends supporting free enterprise and individual entrepreneurs and tearing down barriers to competition in developing countries, since a free market tends to automatically have accountability and feedback built in.&lt;/p&gt;
&lt;p&gt;So how is this related? Basically I began to see myself and a lot of other economists as falling into a &amp;#8220;let&amp;#8217;s throw more money at the problem&amp;#8221; kind of solution to economic issues. Except economists rarely throw money. They do spend a lot of time thinking about stuff and writing though. But why spend all this time on coming up with (for me) mediocre ideas when you could be out actually &lt;i&gt;doing&lt;/i&gt; something? You could be out creating something that people will use. You could be adding value to the world, helping people live their lives more efficiently. Bill Easterly suggests supporting entrepreneurs in the developing world, so why not become an entrepreneur yourself and plug yourself into the accountability and feedback loop that the free market provides?&lt;/p&gt;
&lt;p&gt;This isn&amp;#8217;t meant to be a criticism of all academic economists though, and especially not those at Princeton. I have a lot of respect for those economists who are able to think incredibly creatively about the problems we face and who develop the tools to try to understand and solve them. I just know now that I&amp;#8217;m not one of them.&lt;/p&gt;
&lt;p&gt;However I have absolutely no regrets concerning my time at Princeton. I finished all my coursework, wrote my second-year paper, and passed both of my general exams. I left with a Master&amp;#8217;s degree and I would do it all again if I had to choose. I learned a ton, and the economic concepts and jargon that I picked up have proven incredibly useful in thinking about other problems. I presume that will continue to hold true.&lt;/p&gt;
&lt;p&gt;The one thing that really sticks with me from economics is the overwhelming emphasis on optimization and efficiency. When applied to real-world problems rather than abstractions these ideas are very powerful, if not quite as clean. So what am I doing now? Writing software and thinking about how to leverage technology to improve the efficiency of the world, starting small of course.&lt;/p&gt;
&lt;p&gt;I get the feeling that I can really be creative and useful through software, and I don&amp;#8217;t think I&amp;#8217;m wrong this time.&lt;/p&gt;</content>
    </entry>
  
</feed>
